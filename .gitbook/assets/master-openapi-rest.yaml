---
openapi: 3.0.1
servers:
  - url: https://easypay5.com
    description: Production server
info:
  title: EasyPay5 API
  version: 1.0.0
  description: API for Number's services
x-hideTryItPanel: true
components:
  parameters:
    SessKey:
      name: SessKey
      in: header
      required: true
      schema:
        type: string
        example: A1842D663E9A4A72XXXXXXXX303541303234373138
        description: >
          A unique session key used for authentication in API calls. 

          This key is generated upon successful authentication and must be included in all subsequent requests.
    ContentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        example: application/json
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        example: application/json
  schemas:
    AccountHolder:
      type: object
      properties:
        AccountNum:
          type: string
          example: wj8HlAYlMJI=jvje9l7qZuEFiDDeEDDym6ZdlL0DX8HX
          description: The unique account number associated with the account holder.
        AcctMask:
          type: string
          example: 4111XXXXXXXX1111
          description: The masked version of the account number for security purposes.
        Address1:
          type: string
          example: 123 Fake St
          description: The primary address line of the account holder.
        Address2:
          type: string
          example: ""
          description: The secondary address line of the account holder, if applicable.
        CardType:
          type: string
          example: VI
          description: The type of card associated with the account (e.g., Visa,
            MasterCard).
        City:
          type: string
          example: PORTLAND
          description: The city where the account holder resides.
        Company:
          type: string
          example: ""
          description: The name of the company associated with the account holder, if
            applicable.
        CreatedOn:
          $ref: "#/components/schemas/Date"
        Email:
          type: string
          example: robert@easypaysolutions.com
          description: The email address of the account holder.
        ExpDate:
          type: string
          example: "1023"
          description: The expiration date of the card in MMYY format.
        Firstname:
          type: string
          example: Sean
          description: The first name of the account holder.
        ID:
          type: integer
          example: 1
          description: The unique identifier for the account holder in the system.
        LastChanged:
          $ref: "#/components/schemas/Date"
        LastName:
          type: string
          example: Wood
          description: The last name of the account holder.
        MerchID:
          type: integer
          example: 1
          description: The unique identifier for the merchant associated with the account.
        Phone:
          type: string
          example: "8777248472"
          description: The phone number of the account holder.
        State:
          type: string
          example: ME
          description: The state where the account holder resides.
        Zip:
          type: string
          example: "04106"
          description: The postal code for the account holder's address.
    Address:
      type: object
      properties:
        Address1:
          type: string
          example: 123 Test Road
          description: The primary address line.
        Address2:
          type: string
          example: ""
          description: The secondary address line, if applicable.
        City:
          type: string
          example: Portland
          description: The city associated with the address.
        State:
          type: string
          example: ME
          description: The state associated with the address.
        ZIP:
          type: string
          example: "04005"
          description: The postal code for the address.
        Country:
          type: string
          example: USA
          description: The country associated with the address.
    Amounts:
      type: object
      properties:
        BaseAmt:
          type: number
          format: float
          example: 52
          description: The base $ amount for the transaction before any additional charges.
        Surcharge:
          type: number
          format: float
          example: 1.04
          description: The surcharge $ amount added to the base amount, if applicable.
            Adjusted based on the total.
        TotalAmt:
          type: number
          format: float
          example: 53.04
          description: The total $ amount to be charged, which includes the base amount
            and any surcharges.
    AmountsFull:
      type: object
      properties:
        TotalAmt:
          type: number
          example: 10
          description: The total $ amount to be charged.
        SalesTax:
          type: number
          example: 0
        Surcharge:
          type: number
          example: 0
          description: The surcharge $ amount added to the base amount, if applicable.
        Tip:
          type: number
          example: 0
        CashBack:
          type: number
          example: 0
        ClinicAmount:
          type: number
          example: 0
        VisionAmount:
          type: number
          example: 0
        PrescriptionAmount:
          type: number
          example: 0
        DentalAmount:
          type: number
          example: 0
        TotalMedicalAmount:
          type: number
          example: 0
    AVSr:
      type: string
      example: Y
      description: >
        AVS response code indicating the result of the Address Verification
        Service. 

        See https://merchantservices.chase.com/support/faqs/address-verification-service
    BatchResult:
      type: object
      properties:
        BatchClose:
          type: string
          example: 720191352
          description: The timestamp indicating when the batch was closed, formatted as a
            string.
        BatchLogID:
          type: integer
          example: 103
          description: A unique identifier for the batch log entry.
        BatchNetAmount:
          type: number
          format: float
          example: 10
          description: The net $ amount of the batch after all transactions have been
            processed.
        BatchNum:
          type: integer
          example: 3
          description: The sequential number of the batch within the processing system.
        BatchOpen:
          type: string
          example: 720191352
          description: The timestamp indicating when the batch was opened, formatted as a
            string.
        BatchTransCount:
          type: integer
          example: 1
          description: The total number of transactions included in the batch.
        Code:
          type: string
          enum:
            - A
            - F
          example: A
          description: >
            A code representing the status of the batch.
              - A: Approved - The batch has been successfully processed.
              - F: Failed - The batch has failed processing or has been rejected.
        RemainingUnsettled:
          type: integer
          example: 0
          description: The number of transactions that remain unsettled in the batch.
        ResultText:
          type: string
          example: "OK 003 0720 0000                "
          description: A text message providing additional information about the batch
            processing result.
        TxLock:
          $ref: "#/components/schemas/TxLock"
    BatchStatus:
      type: string
      oneOf:
        - title: N
          description: Not settled yet
        - title: A
          description: Approved
        - title: S
          description: Locked for resettlement
      example: N
      description: The status of the batch.
    ChargeDetails:
      type: object
      properties:
        AccountNumber:
          type: string
          description: The account number associated with the bank account from which
            funds will be withdrawn.
          example: "878460000256"
        RoutingNumber:
          type: string
          description: The routing number of the bank, used to identify the financial
            institution for the transaction.
          example: "211274515"
        Amount:
          type: number
          format: float
          description: The $ amount to be charged, specified in decimal format.
          example: 10.25
        AccountType:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
          description: |
            The type of bank account. Possible values are: 
            - 1: Personal Checking. 
            - 2: Personal Saving.
            - 3: Business Checking. 
            - 4: Business Saving.
          example: 1
    Consent:
      type: object
      properties:
        AcctHolderFirstName:
          type: string
          example: Bruce
          description: The first name of the account holder.
        AcctHolderID:
          type: integer
          example: 78
          description: A unique identifier for the account holder.
        AcctHolderLastName:
          type: string
          example: Wayne
          description: The last name of the account holder.
        AcctNo:
          type: string
          example: "5439"
          description: The account number associated with the consent.
        CardExpDate:
          $ref: "#/components/schemas/Date"
        CardExpDateMMYY:
          type: string
          example: "1228"
          description: The expiration date of the card in MMYY format.
        ConsentType:
          $ref: "#/components/schemas/ConsentType"
        CreatedBy:
          type: string
          example: Savannah_Tester
          description: The identifier of the user or system that created the consent.
        CreatedByOrigin:
          type: string
          example: API
          description: The origin of the creation request, indicating it was made via API.
        CreatedOn:
          $ref: "#/components/schemas/Date"
        CustID:
          type: integer
          example: 77
          description: A unique identifier for the customer associated with the consent.
        CustomerRefID:
          type: string
          example: modify
          description: A reference ID for the customer, used for modification purposes.
        EndDate:
          $ref: "#/components/schemas/Date"
        ID:
          type: integer
          example: 55
          description: A unique identifier for the consent record.
        IsEnabled:
          type: boolean
          example: true
          description: Indicates whether the consent is currently enabled.
        MerchID:
          type: integer
          example: 3
          description: A unique identifier for the merchant associated with the consent.
        ModifiedOn:
          $ref: "#/components/schemas/Date"
        RPGUID:
          $ref: "#/components/schemas/RPGUID"
        ServiceDescrip:
          type: string
          example: API Modify
          description: A description of the service associated with the consent.
        StartDate:
          $ref: "#/components/schemas/Date"
    ConsentCreator:
      type: object
      properties:
        MerchID:
          type: integer
          example: 1
        CustomerRefID:
          type: string
          example: A1523644
        ServiceDescrip:
          type: string
          example: REST Test
        RPGUID:
          $ref: "#/components/schemas/RPGUID"
        StartDate:
          $ref: "#/components/schemas/Date"
        NumDays:
          type: integer
          example: 365
        LimitPerCharge:
          type: number
          format: float
          example: 1000
        LimitLifeTime:
          type: number
          format: float
          example: 100000
    ConsentMods:
      type: object
      properties:
        ExpMonth:
          type: integer
          example: 10
          description: Expiration month of the card
        ExpYear:
          type: integer
          example: 22
          description: Full expiration year of the card or the last 2 digits
        Email:
          type: string
          format: email
          example: robert@easypaysolutions.com
          description: Email address associated with the consent
        Zip:
          type: string
          example: "04106"
          description: ZIP code associated with the consent
        CustomerRefID:
          type: string
          example: A1235456
          description: Customer reference ID
        ServiceDescrip:
          type: string
          example: REST API Testor
          description: Description of the service
        RPGUID:
          $ref: "#/components/schemas/RPGUID"
        NumDays:
          type: integer
          example: 365
          description: Number of days for the consent
        LimitPerCharge:
          type: number
          format: float
          example: 10000
          description: Limit per charge
        LimitLifeTime:
          type: number
          format: float
          example: 100000
          description: Lifetime limit
    ConsentType:
      type: string
      enum:
        - S
        - O
        - R
        - A
      example: S
      description: |
        The type of consent given for the payment.
          - S: Subscription Consent
          - O: One-time Consent
          - R: Recurring Consent
          - A: Annual Consent
    Customer:
      type: object
      properties:
        Address1:
          type: string
          example: 123 Fake St.
        Address2:
          type: string
          example: "          "
        City:
          type: string
          example: "PORTLAND  "
        ClientRefID:
          type: string
          example: A123456
        Company:
          type: string
          example: ""
        CreatedOn:
          $ref: "#/components/schemas/Date"
        Email:
          type: string
          example: robert@easypaysolutions.com
        Firstname:
          type: string
          example: Sean
        ID:
          type: integer
          example: 72
        LastChanged:
          $ref: "#/components/schemas/Date"
        LastName:
          type: string
          example: Wood
        MerchID:
          type: integer
          example: 1
        Phone:
          type: string
          example: "8777248472"
        Service:
          type: string
          example: ""
        State:
          type: string
          example: "ME        "
        Zip:
          type: string
          example: "04106          "
    CreditCardInfo:
      type: object
      properties:
        AccountNumber:
          type: string
          example: "4111111111111111"
        ExpMonth:
          type: integer
          example: 10
        ExpYear:
          type: integer
          example: 2028
        CSV:
          type: string
          example: "122"
    CreditCardInfoWithTrack:
      type: object
      properties:
        AccountNumber:
          type: string
          example: "4111111111111111"
        ExpMonth:
          type: integer
          example: 10
        ExpYear:
          type: integer
          example: 2028
        CSV:
          type: string
          example: "122"
        Track:
          type: string
          nullable: true
          example: "%B4788250000028291^VISA
            TEST/GOOD^231010100733000000?;4895390000000013=151210100000733?"
    CVVr:
      type: string
      enum:
        - M
        - N
      example: ""
      description: >
        CVV response code indicating the result of the Card Verification
        Value check.
          - M: Match - The CVV provided matches the cardholder's information.
          - N: No Match - The CVV provided does not match the cardholder's information.
    Date:
      type: string
      example: 2024-12-01T11:19:01.000Z
      description: Date and time in Microsoft JSON date format (Unix timestamp and
        timezone offset).
    EINDEX:
      type: string
      example: "100"
      description: Integrator key index for encryption assigned when integrator
        account is first created, received with the initial login credentials
    ErrCode:
      type: integer
      example: 0
      description: Error code. 0 indicates success.
    ErrMsg:
      type: string
      nullable: true
      example: ""
      description: Error message. Empty or null if no error.
    TransactionFlags:
      type: string
      enum:
        - ADJUST_PENDING
        - CAPTURE_PENDING
        - CREDIT_PENDING
        - FORCE_PENDING
        - INC_PENDING
      example: ""
      description: >
        Flags indicating special conditions or statuses related to the
        transaction.
          - ADJUST_PENDING: Indicates that an adjustment is pending.
          - CAPTURE_PENDING: Indicates that a capture is pending.
          - CREDIT_PENDING: Indicates that a credit is pending.
          - FORCE_PENDING: Indicates that a force is pending.
          - INC_PENDING: Indicates that an increase is pending.
    FunctionOk:
      type: boolean
      example: true
      description: Indicates if the function executed correctly
    Items:
      type: object
      properties:
        ServiceDescrip:
          type: string
          example: FROM API TESTER
          description: A description of the service or item.
        ClientRefID:
          type: string
          example: 12456AA
          description: A reference ID provided by the client for tracking purposes.
        RPGUID:
          $ref: "#/components/schemas/RPGUID"
    Payment:
      type: object
      properties:
        AcctNo:
          type: string
          example: "1111"
          description: The account number associated with the payment.
        CardHolder:
          type: string
          example: JOHN DOE
          description: The full name of the cardholder making the payment.
        CardType:
          type: string
          example: VI
          description: The type of card used for the payment (e.g., VI for Visa, MC for
            MasterCard).
        ConsentID:
          type: integer
          example: 6
          description: An identifier for the consent associated with the payment.
        ConsentType:
          $ref: "#/components/schemas/ConsentType"
        ErrMsg:
          type: string
          example: ""
          description: An error message returned if the transaction fails.
        IsPartialApproval:
          type: boolean
          example: false
          description: Indicates whether the transaction received partial approval.
        MerchID:
          type: integer
          example: 1
          description: The merchant ID associated with the payment.
        PaymentAmt:
          type: number
          format: float
          example: 10
          description: The $ amount of the payment being processed.
        PaymentDate:
          $ref: "#/components/schemas/Date"
        PaymentNum:
          type: integer
          example: 1
          description: The sequential number of the payment transaction.
        SEQ:
          type: string
          example: "119"
          description: A sequence number for tracking the payment.
        SchedID:
          type: integer
          example: 1
          description: The ID of the schedule associated with the payment, if applicable.
        SchedNum:
          type: integer
          example: 1
          description: The number of the schedule associated with the payment, indicating
            the order of the schedule within a set.
        TxApproved:
          type: boolean
          example: true
          description: Indicates whether the transaction was approved.
        TxID:
          type: integer
          example: 104
          description: The unique identifier for the transaction.
        TxnCode:
          type: string
          example: 90944
          description: The transaction code associated with the payment.
    Person:
      type: object
      properties:
        Firstname:
          type: string
          example: Sally
        Lastname:
          type: string
          example: APIACH
        Company:
          type: string
          example: ""
        Title:
          type: string
          example: ""
        Url:
          type: string
          example: ""
        BillIngAdress:
          $ref: "#/components/schemas/Address"
        Email:
          type: string
          example: testing@easypaysolutions.com
        Phone:
          type: string
          example: "8775558472"
    ReceiptType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      example: 2
      description: |
        The type of receipt
          - 1: Transaction
          - 2: Void
          - 3: Refund
          - 4: Annual Consent
          - 5: Recurring Consent
          - 6: Subscription
          - 7: ACH Transaction
          - 8: ACH Void
          - 9: ACH Refund
    Recipient:
      type: integer
      enum:
        - 1
        - 2
        - 3
      example: 1
      description: |
        The targeted recipient type
          - 1: Merchant
          - 2: Customer
          - 3: Both
    Reconcile:
      type: object
      properties:
        AMOUNT:
          type: number
          format: float
          example: 10
          description: The total $ amount of the transaction.
        CreatedOn:
          $ref: "#/components/schemas/Date"
        Origin:
          type: string
          enum:
            - API
            - WID
            - VT
            - MOBL
            - SDK
            - AUTO
          example: API
          description: |
            The source from which the transaction originated.
              - API: REST / SOAP API
              - WID: Widget
              - VT: Virtual Terminal
              - MOBL: Mobile SDK
              - SDK: Verifone
              - AUTO: Automatically scheduled from a payment plan
        TxID:
          type: integer
          example: -1
          description: The transaction ID associated with this payment.
        TxSTATUS:
          $ref: "#/components/schemas/TxStatus"
    REF_ID:
      type: string
      example: A97689#
      description: A custom, user-defined reference ID or value.
    RefTxID:
      type: integer
      example: 0
      description: >
        The identifier for a related transaction, if applicable.

        As an example, when you credit a transaction, that will create a relationship.
    RPGUID:
      type: string
      example: adf98580-b4ab-42fc-bb99-01c89964afe9
      description: A custom, user-defined reference ID or value.
    ScheduledPayment:
      type: object
      properties:
        AcctHolderID:
          type: integer
          example: 782
          description: The unique identifier for the account holder associated with the
            scheduled payment.
        AcctNo:
          type: string
          example: 119
          description: The account number from which the payment will be deducted.
        ConsentID:
          type: integer
          example: 396
          description: The unique identifier for the consent associated with this
            scheduled payment.
        ConsentType:
          $ref: "#/components/schemas/ConsentType"
        DueOn:
          $ref: "#/components/schemas/Date"
        ID:
          type: integer
          example: 282
          description: The unique identifier for this scheduled payment record.
        LastName:
          type: string
          example: Draper
          description: The last name of the account holder associated with the scheduled
            payment.
        MerchID:
          type: integer
          example: 1
          description: The unique identifier for the merchant associated with the
            scheduled payment.
        OfTotalPayment:
          type: number
          example: 100
          description: The $ amount that this scheduled payment contributes to the total
            payment.
        OfTotalPayments:
          type: integer
          example: 10
          description: The total number of payments that are part of this scheduled
            payment plan.
        PaymentAmt:
          type: number
          format: float
          example: 300
          description: The total $ amount to be paid in this payment.
        PaymentNum:
          type: integer
          example: 1
          description: The sequence number of this payment in the series of scheduled
            payments.
        Period:
          type: string
          example: WEEKLY
          description: The frequency of the scheduled payments (e.g., WEEKLY, MONTHLY).
        RPGUID:
          $ref: "#/components/schemas/RPGUID"
        RStatus:
          type: string
          enum:
            - P
            - C
            - S
          example: S
          description: |
            The status of the payment.
              - P: Paid - The payment has been successfully processed.
              - C: Cancelled - The payment has been cancelled.
              - S: Scheduled - The payment is scheduled for processing.
        SchedNum:
          type: integer
          example: 59
          description: The unique number assigned to this schedule, used to differentiate
            between multiple schedules.
        Tries:
          type: integer
          example: 0
          description: The number of attempts made to process this scheduled payment.
        TxID:
          type: integer
          example: -1
          description: The transaction ID associated with this scheduled payment,
            indicating the result of the payment attempt.
    Transaction:
      type: object
      properties:
        ACCT_FIRST_NAME:
          type: string
          example: Sean
          description: The first name of the account holder.
        ACCT_LAST_NAME:
          type: string
          example: Wood
          description: The last name of the account holder.
        ACCT_NO:
          type: string
          example: 4788XXXXXXXX8291
          description: The account number associated with the transaction, masked for
            security.
        AMOUNT:
          type: number
          format: float
          example: 10
          description: The total $ amount of the transaction.
        AVSr:
          $ref: "#/components/schemas/AVSr"
        AcctHolderID:
          type: integer
          example: 3
          description: A unique identifier for the account holder.
        BatchLogID:
          type: integer
          example: 0
          description: The identifier for the batch log associated with the transaction.
        BatchNO:
          type: integer
          example: 0
          description: The batch number to which this transaction belongs.
        BatchStatus:
          $ref: "#/components/schemas/BatchStatus"
        CARD_TYPE:
          type: string
          enum:
            - VI
            - MC
            - AE
            - DS
          example: VI
          description: |
            The type of card used for the transaction.
              - VI: Visa
              - MC: Mastercard
              - AE: American Express
              - DS: Discover
        CASHBACK:
          type: number
          format: float
          example: 0
          description: The $ amount of cashback requested during the transaction.
        CVVr:
          $ref: "#/components/schemas/CVVr"
        CardPresent:
          type: boolean
          example: true
          description: Indicates whether the card was present during the transaction.
        ConsentID:
          type: integer
          example: 0
          description: The identifier for the consent associated with the transaction.
        CreatedOn:
          $ref: "#/components/schemas/Date"
        Credits:
          type: number
          format: float
          example: 0
          description: The $ amount of credits applied to the transaction.
        EMVPresent:
          type: boolean
          example: false
          description: Indicates whether EMV (Europay, MasterCard, and Visa) technology
            was used.
        EMVRecTags:
          type: string
          example: ""
          description: EMV record tags associated with the transaction.
        EXP_DATE:
          type: string
          example: "1028"
          description: The expiration date of the card used for the transaction in MMYY
            format.
        EndCustID:
          type: integer
          example: 44
          description: A unique identifier for the end customer associated with the
            transaction.
        Flags:
          $ref: "#/components/schemas/TransactionFlags"
        HAuthorizedAmount:
          type: number
          format: float
          example: -1
          description: The $ amount authorized for the transaction, if applicable.
        ID:
          type: integer
          example: 44
          description: A unique identifier for the transaction record.
        IsLocked:
          type: boolean
          example: false
          description: Indicates whether the transaction is currently locked for processing
        IsPartialApproval:
          type: boolean
          example: false
          description: Indicates whether the transaction was partially approved.
        LAST_CHANGED_BY:
          type: string
          example: vidya_Venkatraman
          description: The username or identifier of the person who last modified the
            transaction.
        LastChangedOn:
          $ref: "#/components/schemas/Date"
        MerchID:
          type: integer
          example: 1
          description: The unique identifier for the merchant associated with the
            transaction.
        Origin:
          type: string
          enum:
            - API
            - WID
            - VT
            - MOBL
            - SDK
            - AUTO
          example: API
          description: |
            The source from which the transaction originated.
              - API: REST / SOAP API
              - WID: Widget
              - VT: Virtual Terminal
              - MOBL: Mobile SDK
              - SDK: Verifone
              - AUTO: Automatically scheduled from a payment plan
        PAYMENT_TYPE:
          type: string
          example: C
          description: The type of payment method used for the transaction (e.g., C for
            Credit, D for Debit).
        PartialAuthApproved:
          type: number
          format: float
          example: -1
          description: The $ amount that was partially authorized, if applicable.
        PreAuthID:
          type: integer
          example: 0
          description: The identifier for the pre-authorization associated with the
            transaction.
        PrepaidBalance:
          type: number
          format: float
          example: -1
          description: The balance available on a prepaid account, if applicable.
        REF_ID:
          $ref: "#/components/schemas/REF_ID"
        RPGUID:
          $ref: "#/components/schemas/RPGUID"
        RefTxID:
          $ref: "#/components/schemas/RefTxID"
        SALE_TAX:
          type: number
          format: float
          example: 0
          description: The $ amount of sales tax applied to the transaction.
        SEQ_NO:
          type: integer
          example: 51
          description: The sequence number of the transaction, used for ordering or
            tracking.
        SERVER:
          type: string
          example: ""
        SURCHARGE:
          type: number
          format: float
          example: 0
          description: Any additional surcharge applied to the transaction.
        TIP:
          type: number
          format: float
          example: 0
          description: The $ tip amount included in the transaction.
        TXN_CODE:
          type: string
          example: 92682
          description: Approval code returned by the processor.
        TXN_DATE:
          type: string
          example: 42419
          description: The date when the transaction occurred, in MMDDYY format.
        TXN_DATETIME:
          $ref: "#/components/schemas/Date"
        TXN_TIME:
          type: string
          example: 82544
          description: The time when the transaction occurred, in HHMMSS format.
        TxLOCK:
          $ref: "#/components/schemas/TxLock"
        TxSTATUS:
          $ref: "#/components/schemas/TxStatus"
        TxType:
          type: string
          enum:
            - CCAUTHONLY
            - CCSALE
            - CCFORCE
            - CCVOICE
            - CCADJUST
            - CCCREDIT
          example: CCSALE
          description: |
            Specifies the type of transaction being processed.
              - CCAUTHONLY: Authorization only
              - CCSALE: Sale
              - CCFORCE: Force
              - CCVOICE: Voice
              - CCADJUST: Adjustment
              - CCCREDIT: Credit
        UserID:
          type: integer
          example: 2547
          description: The unique identifier for the user associated with the transaction.
            This ID can be used to track which user initiated or is responsible
            for the transaction.
    TxLock:
      type: string
      example: 7A639CD720CE4B14
      description: >
        A unique value which represents the lock imposed on transactions
        prior to settlement.

        If the batch fails, the transaction will remain locked to prevent it from being merged with other settlements.

        In this situation, someone at Number will investigate and resettle the batch in its original grouping.
    TxStatus:
      type: string
      enum:
        - OPEN
        - AUTHOK
        - AUTHFAILED
        - SETTLED
        - FAILED
        - LOCKED
        - VOID
        - HOST
      example: OPEN
      description: |
        Represents the current status of the transaction.
          - OPEN: The transaction is open and has not been processed.
          - AUTHOK: The transaction has been authorized.
          - AUTHFAILED: The transaction authorization failed.
          - SETTLED: The transaction has been settled.
          - FAILED: The transaction failed.
          - LOCKED: The transaction is locked.
          - VOID: The transaction has been voided.
          - HOST: The transaction is being processed by the host.
    TxStatusInternational:
      type: string
      enum:
        - 3DS
        - Redirect
        - Pending
        - Declined
        - Settled
        - Reversal
        - Refund
        - Void
        - Chargeback
      description: Represents the current status of the international transaction
    ProcessorTxID:
      type: string
      example: 16790131F349BCBA
      description: The unique transaction ID from the processor, different from our
        internal transaction ID.
    QueryTransaction:
      type: string
      description: >
        A query string for obtaining specific transaction records using
        Number's query language. Build logical terms and join them with '&&' for
        logical AND or '||' for logical OR. Use single quotes for text and date
        values. Refer to the variable chart for query composition:
          * A: MERCHANT ID - The merchant record you are interested in, e.g. (A=1).
          * B: TRANSACTION STATUS - The status of the transaction, e.g. (B=1).
            * -1: ALL
            * 1: OPEN
            * 2: SETTLED
            * 3: FAILED
            * 4: RETURNED
            * 5: VOID
          * C: DATE CREATED - The date the transaction was created, e.g. (C>='7/5/2024 12:00:00 AM').
          * D: LAST NAME - Last name of the account holder, e.g. (D LIKE '%MITH') for all names that end with 'MITH'.
          * E: TRANSACTION LOCK - Lock status of the transaction, e.g. (E<>'0') for locked transactions.
          * H: TRANSACTION ID - The unique identifier for the transaction, e.g. (H=58258).
          * J: FIRST NAME - First name of the account holder, e.g. (J LIKE 'ROB%') for all names that start with 'ROB'.
          * K: TRANSACTION TYPE - The type of transaction, e.g. (K=-1).
            * -1: ALL
            * 1: ACHDEBIT
            * 2: ACHCREDIT  
          * L: AMOUNT - The $ amount of the transaction, e.g. (L>100.00).
          * M: CLIENT REFERENCE ID - User-defined value on the transaction.
          * N: RPGUID - User-defined value on the transaction.
          * P: CONSENT ID - The Consent ID of card on file the transactions were charged against, e.g. (P=15875).
          * Q: ACCOUNT NUMBER LAST 4 - The last 4 digits of a credit card, e.g. (Q='4123').
          * R: APPROVAL CODE - The approval code for the transaction, e.g. (R='TAS626').
          * S: CUSTOMER LAST NAME - The last name of the customer, e.g. (S='SMITH').
          * T: CUSTOMER FIRST NAME - The first name of the customer, e.g. (T='FOSTER').
          * U: ORIGIN - The origin of the transaction, e.g. (U='API').
            * "API": REST / SOAP API
            * "WID": Widget
            * "VT": Virtual Terminal            
      example: (B=3)&&(E=1)&&(C>'2024-09-01')
    QueryConsent:
      type: string
      description: >
        A query string for obtaining specific consent records using
        Number's query language. Build logical terms and join them with '&&' for
        logical AND or '||' for logical OR. Use single quotes for text and date
        values. Refer to the variable chart for query composition:
          * A: MERCHANT ID - The merchant record you are interested in, e.g. (A=1).
          * B: START DATE - The date the consent becomes active, e.g. (B>='10/20/2024').
          * C: END DATE - The date the consent expires, e.g. (C<='10/20/2024').
          * D: ACCOUNT HOLDER LAST NAME - Last name of the account holder, e.g. (D LIKE '%MITH') for all names that end with 'MITH'.
          * E: CREATED ON - The date the consent was created, e.g. (E<='10/20/2024').
          * F: CUSTOMER REFERENCE ID - User-defined value on the consent.
          * G: CONSENT TYPE - The type of consent, e.g. (G='-1').
            * -1: ALL
            * 1: ANNUAL
            * 2: ONE-TIME
            * 3: RECURRING
            * 4: SUBSCRIPTION
          * H: ENABLED - Indicates whether the consent is currently enabled, e.g. (H=1).
          * J: RPGUID - User-defined value on the consent.
          * K: ACCOUNT HOLDER FIRST NAME - First name of the account holder, e.g. (K LIKE 'ROB%') for all names that start with 'ROB'.
          * Z: CONSENT ID - The unique identifier for the consent, e.g. (Z=15875).
      example: (G=1)&&(B>'10/20/2024')
    QueryRecurringSchedule:
      type: string
      description: >
        A query string for obtaining specific recurring schedule records
        using Number's query language. Build logical terms and join them with
        '&&' for logical AND or '||' for logical OR. Use single quotes for text
        and date values. Refer to the variable chart for query composition:
          * A: CONSENT ID - The unique identifier for the consent associated with the recurring schedule, e.g. (A=545).
          * B: STATUS - The status of the recurring schedule, e.g. (B=-1).
            * -1: ALL
            * 1: SCHEDULED
            * 2: PAID
            * 3: FAILED
            * 4: CANCELLED
          * C: DUE DATE - The date the next payment is due, e.g. (C='10/20/2024').
          * D: ACCOUNT HOLDER LAST NAME - Last name of the account holder, e.g. (D LIKE '%MITH') for all names that end with 'MITH'.
          * E: MERCHANT ID - The unique identifier for the merchant associated with the recurring schedule, e.g. (E=1).
          * F: ACCOUNT NUMBER LAST 4 - The last 4 digits of the account number associated with the recurring schedule, e.g. (F='1234').
          * G: SCHEDULE ID - The unique identifier for the recurring schedule, e.g. (G=12). 
          * H: TYPE - The type of recurring schedule, e.g. (H=-1).
            * -1: ALL
            * 3: RECURRING
            * 4: SUBSCRIPTION
      example: (H=3)&&(C>='10/20/2024')
    QueryBatchLog:
      type: string
      description: >
        A query string for obtaining specific batch log records using
        Number's query language. Build logical terms and join them with '&&' for
        logical AND or '||' for logical OR. Use single quotes for text and date
        values. Refer to the variable chart for query composition:
          * A: MERCHANT ID - The merchant record you are interested in, e.g. (A=545).
          * B: STATUS - The status of the batch log, e.g. (B=-1).
            * -1: ALL
            * 1: FAILED
            * 2: APPROVED
          * C: CREATED ON - The date the batch log was created, e.g. (C>='3/2/2024')&&(C<='4/2/2024').
          * D: BATCH LOG ID - The unique identifier for the batch log, e.g. (D=1777).
          * E: BATCH NUMBER - The batch number for the batch log, e.g. (E=185).
      example: (B=1)&&(C>='3/2/2024')&&(C<='4/2/2024')
paths:
  /APIcardProcREST/v1.0.0/ACH/Sale:
    post:
      summary: Create an ACH Sale
      operationId: createACHSale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChargeDetails:
                  $ref: "#/components/schemas/ChargeDetails"
                AcctHolder:
                  $ref: "#/components/schemas/Person"
                EndCustomer:
                  $ref: "#/components/schemas/Person"
                PurchItems:
                  $ref: "#/components/schemas/Items"
                MerchID:
                  type: integer
                  example: 1
            example:
              ChargeDetails:
                AccountNumber: "878460000256"
                RoutingNumber: "211274515"
                Amount: 10.25
                AccountType: 1
              AcctHolder:
                Firstname: Sally
                Lastname: Smith
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Test Road
                  Address2: ""
                  City: Portland
                  State: ME
                  ZIP: "04005"
                  Country: USA
                Email: testing@easypaysolutions.com
                Phone: "8775558472"
              EndCustomer:
                Firstname: Sally
                Lastname: Smith
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Test Road
                  Address2: ""
                  City: Portland
                  State: ME
                  ZIP: "04005"
                  Country: USA
                Email: testing@easypaysolutions.com
                Phone: "8775558472"
              PurchItems:
                ServiceDescrip: FROM API TESTER
                ClientRefID: 12456AA
                RPGUID: 3d3424a6-c5f3-4c28
              MerchID: 1
      responses:
        "200":
          description: Successful ACH Sale transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACHTransactionResult:
                    type: object
                    properties:
                      AuthID:
                        type: string
                        example: "69017501"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: TxID 1381 Approved
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 1381
                      uniqueTranID:
                        $ref: "#/components/schemas/ProcessorTxID"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: |+
        **For member variable "AccountType" use the following values:**
        1. Personal Checking = 1
        2. Personal Saving = 2
        3. Business Checking = 3 
        4. Business Saving = 4
             
  /APIcardProcREST/v1.0.0/ACH/Combo:
    post:
      summary: Create an ACH Combo Sale and Consent
      operationId: createACHComboSaleAndConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChargeDetails:
                  $ref: "#/components/schemas/ChargeDetails"
                AcctHolder:
                  $ref: "#/components/schemas/Person"
                EndCustomer:
                  $ref: "#/components/schemas/Person"
                PurchItems:
                  $ref: "#/components/schemas/Items"
                MerchID:
                  type: integer
                  example: 1
            example:
              ChargeDetails:
                AccountNumber: "878460000256"
                RoutingNumber: "211274515"
                Amount: 10.25
                AccountType: 1
              AcctHolder:
                Firstname: Sally
                Lastname: Smith
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Test Road
                  Address2: ""
                  City: Portland
                  State: ME
                  ZIP: "04005"
                  Country: USA
                Email: testing@easypaysolutions.com
                Phone: "8775558472"
              EndCustomer:
                Firstname: Sally
                Lastname: Smith
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Test Road
                  Address2: ""
                  City: Portland
                  State: ME
                  ZIP: "04005"
                  Country: USA
                Email: testing@easypaysolutions.com
                Phone: "8775558472"
              PurchItems:
                ServiceDescrip: FROM API TESTER
                ClientRefID: 12456AA
                RPGUID: 3d3424a6-c5f3-4c28
              MerchID: 1
      responses:
        "200":
          description: Successful ACH Combo Sale and Consent transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACHTransaction_ComboResult:
                    type: object
                    properties:
                      AuthID:
                        type: string
                        example: "69017501"
                      ConsentID:
                        type: integer
                        example: 1247
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: TxID 1381 Approved and ConsentID 1247 Created
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 1381
                      uniqueTranID:
                        $ref: "#/components/schemas/ProcessorTxID"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        This method creates both an ACH sale and consent. To create a
        consent only without processing the sale, set the Amount to zero.


        **For member variable "AccountType" use the following values:**

        1. Personal Checking = 1

        2. Personal Saving = 2

        3. Business Checking = 3 

        4. Business Saving = 4
  /APIcardProcREST/v1.0.0/ACH/ApplyCredit:
    post:
      summary: Apply credit to an ACH transaction
      operationId: applyACHCredit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 2
                CreditAmount:
                  type: number
                  format: float
                  example: 15.25
            example:
              TxID: 2
              CreditAmount: 15.25
      responses:
        "200":
          description: Successful application of credit to the ACH transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACH_ApplyCreditResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: APPROVED 67210758 TXID 000041
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 41
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ACH/ProcPayment:
    post:
      summary: Process payment with ACH annual consent
      operationId: processACHConsentPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 21
                ProcessAmount:
                  type: number
                  format: float
                  example: 5.1
            example:
              ConsentID: 21
              ProcessAmount: 5.1
      responses:
        "200":
          description: Successful processing of ACH consent payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACHConsentAnnual_ProcPaymentResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: APPROVED 67210748 TXID 000035
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 72
                      uniqueTranID:
                        $ref: "#/components/schemas/ProcessorTxID"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ACH/Void:
    post:
      summary: Void an ACH transaction
      operationId: voidACHTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 35
            example:
              TxID: 35
      responses:
        "200":
          description: Successful voiding of the ACH transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACHTransaction_VoidResult:
                    type: object
                    properties:
                      AuthID:
                        type: string
                        example: "67210748"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOK:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: VOID APPROVED 67210748 TXID 35
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 35
                        description: ID of the voided transaction. 0 if voiding was not successful.
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Authenticate:
    post:
      summary: Authenticate user and retrieve session key
      operationId: authenticateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AcctCode:
                  type: string
                  example: EP911XXXX
                  description: Account code that never changes
                Token:
                  type: string
                  example: 2148B239CF6846BDA5D141BF4A4CFBE8
                  description: Token that expires every 2 years
            example:
              AcctCode: EP911XXXX
              Token: 2148B239CF6846BDA5D141BF4A4CFBE8
      responses:
        "200":
          description: Successful authentication and session key retrieval
          content:
            application/json:
              schema:
                type: object
                properties:
                  AuthenticateResult:
                    type: object
                    properties:
                      AuthSuccess:
                        type: boolean
                        example: true
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      MerchantList:
                        type: array
                        description: List of merchants associated with the authenticated user for use
                          with transactions
                        items:
                          type: object
                          properties:
                            Address:
                              type: string
                              example: 45 spring street portland Maine 04101
                            Descrip:
                              type: string
                              example: Test Merchant 1
                            ID:
                              type: integer
                              example: 1
                            Location:
                              type: string
                              example: Test Merchant 1
                            TermID:
                              type: string
                              example: "006"
                              description: The unique id associated with the merchant terminal
                      RespMsg:
                        type: string
                        example: SessKey Expires|4/18/2019 7:29:47 AM
                      SessKey:
                        type: string
                        example: B9F24903C3BA4770AE303032303541303032353437
                      ThisUser:
                        type: object
                        properties:
                          APILocationID:
                            type: integer
                            example: 2210
                            description: Location identifier used by the Number team to help debug issues.
                          AccountCode:
                            type: string
                            example: EP9116875
                          AcctID:
                            type: integer
                            example: 205
                            description: The ID of the account under which the user was created.
                          Alias:
                            type: string
                            example: vidya_Venkatraman
                          CreatedBy:
                            type: string
                            example: "ADMIN : vidya Venkatraman"
                          DateCreated:
                            $ref: "#/components/schemas/Date"
                          DateModified:
                            $ref: "#/components/schemas/Date"
                          Description:
                            type: string
                            example: EP DEV ACCT
                          ExpirationDate:
                            $ref: "#/components/schemas/Date"
                          ID:
                            type: integer
                            example: 2547
                            description: The unique user ID associated with the authenticated user.
                          IsExpired:
                            type: boolean
                            example: false
                          IsLockedOut:
                            type: boolean
                            example: false
                          TokenDescription:
                            type: string
                            example: EP DEV ACCT
      parameters:
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/CardSale/CardPresent:
    post:
      summary: Process a card sale with card present
      description: + ***For PCI compliant merchants only (AOC on file with Number required)***
      operationId: cardSaleCardPresent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Track:
                  type: string
                  example: "%B4788250000028291^VISA
                    TEST/GOOD^231010100733000000?;4895390000000013=151210100000\
                    733?"
                AcctHolder:
                  $ref: "#/components/schemas/AccountHolder"
                EndCustomer:
                  $ref: "#/components/schemas/AccountHolder"
                Amounts:
                  $ref: "#/components/schemas/AmountsFull"
                PurchItems:
                  $ref: "#/components/schemas/Items"
                MerchID:
                  type: integer
                  example: 1
            example:
              Track: "%B4788250000028291^VISA
                TEST/GOOD^231010100733000000?;4895390000000013=151210100000733?"
              AcctHolder:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              EndCustomer:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              Amounts:
                TotalAmt: 10
                SalesTax: 0
                Surcharge: 0
                Tip: 0
                CashBack: 0
                ClinicAmount: 0
                VisionAmount: 0
                PrescriptionAmount: 0
                DentalAmount: 0
                TotalMedicalAmount: 0
              PurchItems:
                ServiceDescrip: FROM API TESTER
                ClientRefID: ""
                RPGUID: a8e2bbfc-e423-4a84-a9e9-2a6e08153368
              MerchID: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  CreditCardSale_CardPresentResult:
                    type: object
                    properties:
                      AVSresult:
                        $ref: "#/components/schemas/AVSr"
                      AcquirerResponseEMV:
                        type: string
                        nullable: true
                        example: null
                      CVVresult:
                        $ref: "#/components/schemas/CVVr"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      IsPartialApproval:
                        type: boolean
                        example: false
                      RequiresVoiceAuth:
                        type: boolean
                        example: false
                      RespMsg:
                        type: string
                        example: APPROVED 092682
                      ResponseApprovedAmount:
                        type: number
                        format: float
                        example: -1Pl
                      ResponseAuthorizedAmount:
                        type: number
                        format: float
                        example: -1
                      ResponseBalanceAmount:
                        type: number
                        format: float
                        example: -1
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 44
                      TxnCode:
                        type: string
                        example: 92682
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/CardSale/Manual:
    post:
      summary: Process a manual card sale
      description: + ***For PCI compliant merchants only (AOC on file with Number required)***
      operationId: cardSaleManual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ccCardInfo:
                  $ref: "#/components/schemas/CreditCardInfo"
                AcctHolder:
                  $ref: "#/components/schemas/AccountHolder"
                EndCustomer:
                  $ref: "#/components/schemas/AccountHolder"
                AmountsFull:
                  $ref: "#/components/schemas/AmountsFull"
                Items:
                  $ref: "#/components/schemas/Items"
                MerchID:
                  type: integer
                  example: 1
            example:
              ccCardInfo:
                AccountNumber: "4111111111111111"
                ExpMonth: 10
                ExpYear: 2028
                CSV: "122"
              AcctHolder:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              EndCustomer:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              Amounts:
                TotalAmt: 10
                SalesTax: 0
                Surcharge: 0
                Tip: 0
                CashBack: 0
                ClinicAmount: 0
                VisionAmount: 0
                PrescriptionAmount: 0
                DentalAmount: 0
                TotalMedicalAmount: 0
              PurchItems:
                ServiceDescrip: FROM API TESTER
                ClientRefID: ""
                RPGUID: 3d3424a6-c5f3-4c28-a294-490b6f674b41
              MerchID: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  CreditCardSale_ManualResult:
                    type: object
                    properties:
                      AVSresult:
                        $ref: "#/components/schemas/AVSr"
                      AcquirerResponseEMV:
                        type: string
                        nullable: true
                        example: null
                      CVVresult:
                        $ref: "#/components/schemas/CVVr"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      IsPartialApproval:
                        type: boolean
                        example: false
                      RequiresVoiceAuth:
                        type: boolean
                        example: false
                      RespMsg:
                        type: string
                        example: "APPROVED 099804                 "
                      ResponseApprovedAmount:
                        type: number
                        format: float
                        example: -1
                      ResponseAuthorizedAmount:
                        type: number
                        format: float
                        example: -1
                      ResponseBalanceAmount:
                        type: number
                        format: float
                        example: -1
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 41
                      TxnCode:
                        type: string
                        example: 99804
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/CardSale/WithOptions:
    post:
      summary: Process a card sale with surcharge
      description: + ***For PCI compliant merchants only (AOC on file with Number required)***
      operationId: cardSaleSurcharge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MerchID:
                  type: integer
                  example: 1
                ccCardInfo:
                  $ref: "#/components/schemas/CreditCardInfo"
                AcctHolder:
                  $ref: "#/components/schemas/AccountHolder"
                EndCustomer:
                  $ref: "#/components/schemas/AccountHolder"
                Amounts:
                  $ref: "#/components/schemas/Amounts"
                PurchItems:
                  $ref: "#/components/schemas/Items"
            example:
              MerchID: 1
              ccCardInfo:
                AccountNumber: "4111111111111111"
                ExpMonth: 10
                ExpYear: 2028
                CSV: "122"
              AcctHolder:
                Firstname: Sean
                Lastname: Testing
                Company: ""
                Title: ""
                Url: ""
                BillingAddress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              EndCustomer:
                Firstname: Sean
                Lastname: Testing
                Company: ""
                Title: ""
                Url: ""
                BillingAddress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: tester@easypaysolutions.com
                Phone: "8777248472"
              Amounts:
                BaseAmt: 52
                Surcharge: 1.04
                TotalAmt: 53.04
              PurchItems:
                ServiceDescrip: FROM API TESTER
                ClientRefID: "1876345"
                RPGUID: 3d3424a6-c5f3-4c28-a294-490b6f674b41
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  CreditCardSale_WithOptionsResult:
                    type: object
                    properties:
                      AVSresult:
                        $ref: "#/components/schemas/AVSr"
                      AcquirerResponseEMV:
                        type: string
                        nullable: true
                        example: null
                      CVVresult:
                        $ref: "#/components/schemas/CVVr"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      IsPartialApproval:
                        type: boolean
                        example: false
                      RequiresVoiceAuth:
                        type: boolean
                        example: false
                      RespMsg:
                        type: string
                        example: "APPROVED 099804                 "
                      ResponseApprovedAmount:
                        type: number
                        format: float
                        example: -1
                      ResponseAuthorizedAmount:
                        type: number
                        format: float
                        example: -1
                      ResponseBalanceAmount:
                        type: number
                        format: float
                        example: -1
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 41
                      TxnCode:
                        type: string
                        example: 99804
                      ApprovedAmounts:
                        $ref: "#/components/schemas/Amounts"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/CardSale/ApplyCredit:
    post:
      summary: Process a refund to a settled charge
      operationId: applyCredit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 56
                  description: Transaction ID of the charge to be refunded
                CreditAmount:
                  type: number
                  format: float
                  example: 5
                  description: Amount to be refunded
            example:
              TxID: 56
              CreditAmount: 5
      responses:
        "200":
          description: Successful processing of the refund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Transaction_ApplyCreditResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successful Credit Pending Transaction ID : 000057"
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 57
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Use this call to process a refund to a settled charge. You will
        need the Transaction ID and the amount to be refunded.
  /APIcardProcREST/v1.0.0/CardSale/Void:
    post:
      summary: Void a pending charge
      operationId: voidTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 53
                  description: Transaction ID of the charge to be voided
            example:
              TxID: 53
      responses:
        "200":
          description: Successful voiding of the transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  Transaction_VoidResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successful Transaction Void TxID : 53 [097706]"
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 53
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Use this call to void a pending charge. The status of the
        transaction needs to be OPEN, such as transactions that have not settled
        yet. To refund a transaction that was previously settled, use the Credit
        method. You will need the Transaction ID of the charge to be voided.
  /APIcardProcREST/v1.0.0/ConsentAnnual/CalcFees:
    post:
      summary: Calculate surcharging or convenience fees
      operationId: calculateConsentFees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 7849
                  description: ID for consent associated with the merchant account
                Amount:
                  type: number
                  format: float
                  example: 52
                  description: Base $ amount for which fees are to be calculated
                AlternateMerchID:
                  type: integer
                  example: 0
                  description: ID of the merchant to collect the payment funds. Use 0 for the
                    merchant on consent.
            example:
              ConsentID: 7849
              Amount: 52
              AlternateMerchID: 0
      responses:
        "200":
          description: Successful calculation of fees
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_CalcFeesResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Fees calculated for CREDIT Card 4663XXXXXXXX2741
                      Amounts:
                        $ref: "#/components/schemas/Amounts"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        This API call is for merchant accounts that are specifically
        configured for surcharge and/or convenience fee processing. Prior to
        charging a card on file, you may use this method to properly calculate
        the intended fees (Surcharging or Convenience fees ).


        Fees will be calculated based on the merchant configuration and the card type itself. It is important to show the calculated fees at the point of sale so that a cardholder can reject the sale if they desire.


        You can specify a Alternate MerchID rather than use the merchant record originally designated when you saved the card. A Value Of ZERO will use the original Merchant record.


        Once you have determined your fees you can then call the method named : Charge Stored Card with Options to authorize the sale.
  /APIcardProcREST/v1.0.0/ConsentAnnual/Cancel:
    post:
      summary: Cancel a consent (Card On File)
      operationId: cancelConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 20
                  description: ID of the consent to be canceled
            example:
              ConsentID: 20
      responses:
        "200":
          description: Successful cancellation of consent
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_CancelResult:
                    type: object
                    properties:
                      CancelSuccess:
                        type: boolean
                        example: true
                      CancelledConsentID:
                        type: integer
                        example: 20
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successfully DISBALED ConsentID 20 : Card Number Removed"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Use this call to Cancel a consent (Card On File). You will need the
        ConsentID in order to execute this method. 
  /APIcardProcREST/v1.0.0/ConsentAnnual/ChargeStoredCard:
    post:
      summary: Charge a stored card
      operationId: chargeStoredCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 8
                  description: ID of the consent (or stored card data)
                Amounts:
                  $ref: "#/components/schemas/Amounts"
                purchDetails:
                  $ref: "#/components/schemas/Items"
                AlternateMerchID:
                  type: integer
                  example: 0
                  description: Use 0 for the original merchant record or a positive integer for a
                    different merchant record
                User:
                  type: string
                  example: Samuel
                  description: The user initiating the sale. Used for reporting.
            example:
              ConsentID: 8
              Amounts:
                BaseAmt: 52
                Surcharge: 1.04
                TotalAmt: 53.04
              purchDetails:
                ServiceDescrip: Annual Checkup
                ClientRefID: "174356"
                RPGUID: "99438332"
              AlternateMerchID: 0
              User: Samuel
      responses:
        "200":
          description: Successful charge of the stored card
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_ChargeStoredCardResult:
                    type: object
                    properties:
                      AVSresult:
                        $ref: "#/components/schemas/AVSr"
                      AcquirerResponseEMV:
                        type: string
                        nullable: true
                        example: null
                      CVVresult:
                        $ref: "#/components/schemas/CVVr"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      IsPartialApproval:
                        type: boolean
                        example: false
                      RequiresVoiceAuth:
                        type: boolean
                        example: false
                      RespMsg:
                        type: string
                        example: APPROVED OK1400
                      ResponseApprovedAmount:
                        type: number
                        format: float
                        example: 0
                      ResponseAuthorizedAmount:
                        type: number
                        format: float
                        example: 53.04
                      ResponseBalanceAmount:
                        type: number
                        format: float
                        example: 0
                      TxApproved:
                        type: boolean
                        example: true
                      TxID:
                        type: integer
                        example: 37
                      TxnCode:
                        type: string
                        example: OK1400
                      ApprovedAmounts:
                        $ref: "#/components/schemas/Amounts"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        This Method allows the user to charge a stored Card.


        ConsentID

        Please supply the ID of the Consent ( or stored card data )


        AlternateMerchID

        Here you can use ZERO if you plan to charge the same merchant record which was specified when saving the Card Info. You can use a positive integer if you plan to charge a merchant record which differs from the one originally used.


        purchDetails

        If you want to attach new reference data to the transaction you may do so using the following fields:


        ServiceDescrip : description of the transaction

        ClientRefID : your user defined reference ID

        RPGUID : another user defined reference ID

        If you choose NOT to supply these fields ( use empty string ) the system will pull this data from the original stored card data.


        Amounts

        Here you will supply the amount of the transaction. You may supply FEES but only if these have been properly configured for each Merchant record.


        If you don't have FEES configured simply supply the BaseAmt and TotalAmt.


        If you do Have Fees Configured you can call the method named: Calculate Annual Consent Fees prior to calling this method.


        You can specify fee values up to and including those determined using the above method.


        If you specify values greater than those calculated above, then your value will be clamped.


        IMPORTANT : Always check your response to determine the fees which are APPROVED as this may differ from what was REQUESTED.


        User

        Here you can assign a user to the sale so that we record the person which is initiating the sale within the integrator software.
  /APIcardProcREST/v1.0.0/ConsentAnnual/Create_CP:
    post:
      summary: Create an annual consent with card present
      description: + ***For PCI compliant merchants only (AOC on file with Number required)***
      operationId: createAnnualConsentCP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Track:
                  type: string
                  example: "%B4788250000028291^VISA
                    TEST/GOOD^231010100733000000?;4895390000000013=151210100000\
                    733?"
                ConsentCreator:
                  $ref: "#/components/schemas/ConsentCreator"
                AcctHolder:
                  $ref: "#/components/schemas/Person"
                EndCustomer:
                  $ref: "#/components/schemas/Person"
            example:
              Track: "%B4788250000028291^VISA
                TEST/GOOD^231010100733000000?;4895390000000013=151210100000733?"
              ConsentCreator:
                MerchID: 1
                CustomerRefID: A1523644
                ServiceDescrip: REST Test
                RPGUID: ad8c349f-a301-4fc8-956c-54b59a3f6440
                StartDate: /Date(1566406242284-0400)/
                NumDays: 365
                LimitPerCharge: 1000
                LimitLifeTime: 100000
              AcctHolder:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              EndCustomer:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_Create_CPResult:
                    type: object
                    properties:
                      ConsentID:
                        type: integer
                        example: 28
                      CreationSuccess:
                        type: boolean
                        example: true
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      PreConsentAuthMessage:
                        type: string
                        example: "APPROVED 095710                 "
                      PreConsentAuthSuccess:
                        type: boolean
                        example: true
                      PreConsentAuthTxID:
                        type: integer
                        example: 84
                      RespMsg:
                        type: string
                        example: "Success : Created Consent ID : 000028"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ConsentAnnual/Create_MAN:
    post:
      summary: Create an annual consent with manual card entry
      description: + ***For PCI compliant merchants only (AOC on file with Number required)***
      operationId: createAnnualConsentMAN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ccCardInfo:
                  $ref: "#/components/schemas/CreditCardInfo"
                ConsentCreator:
                  $ref: "#/components/schemas/ConsentCreator"
                AcctHolder:
                  $ref: "#/components/schemas/Person"
                EndCustomer:
                  $ref: "#/components/schemas/Person"
            example:
              ccCardInfo:
                AccountNumber: "4111111111111111"
                ExpMonth: 10
                ExpYear: 2022
                CSV: "122"
              ConsentCreator:
                MerchID: 1
                CustomerRefID: A1523644
                ServiceDescrip: REST Test
                RPGUID: 4c269391-a698-4e10-a1a8-0353ee80d1a6
                StartDate: /Date(1563800567934-0400)/
                NumDays: 365
                LimitPerCharge: 1000
                LimitLifeTime: 100000
              AcctHolder:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              EndCustomer:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_Create_MANResult:
                    type: object
                    properties:
                      ConsentID:
                        type: integer
                        example: 18
                      CreationSuccess:
                        type: boolean
                        example: true
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      PreConsentAuthMessage:
                        type: string
                        example: "APPROVED 297311                 "
                      PreConsentAuthSuccess:
                        type: boolean
                        example: true
                      PreConsentAuthTxID:
                        type: integer
                        example: 61
                      RespMsg:
                        type: string
                        example: "Success : Created Consent ID : 000018"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ConsentAnnual/Modify:
    post:
      summary: Modify an annual consent
      operationId: modifyConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 10
                  description: ID of the consent to be modified
                ConsentMods:
                  $ref: "#/components/schemas/ConsentMods"
            example:
              ConsentID: 10
              ConsentMods:
                ExpMonth: 10
                ExpYear: 22
                Email: robert@easypaysolutions.com
                Zip: "04106"
                CustomerRefID: A1235456
                ServiceDescrip: REST API Testor
                RPGUID: adf98580-b4ab-42fc-bb99-01c89964afe9
                NumDays: 365
                LimitPerCharge: 10000
                LimitLifeTime: 100000
      responses:
        "200":
          description: Successful modification of annual consent
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_ModifyResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ModifySuccess:
                        type: boolean
                        example: true
                      RespMsg:
                        type: string
                        example: "Success : Modified Consent ID : 10"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ConsentRecurring/Cancel:
    post:
      summary: Cancel a recurring consent
      operationId: cancelRecurringConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 23
                  description: ID of the consent to be cancelled
            example:
              ConsentID: 23
      responses:
        "200":
          description: Recurring consent successfully cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentRecurring_CancelResult:
                    type: object
                    properties:
                      CancelSuccess:
                        type: boolean
                        example: true
                      CancelledConsentID:
                        type: integer
                        example: 23
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successfully DISBALED ConsentID 23 : Card Number Removed"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ConsentRecurring/Create:
    post:
      summary: Create a recurring consent with manual card entry
      description: + ***For PCI compliant merchants only (AOC on file with Number required)***
      operationId: createRecurringConsentManual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ccCardInfo:
                  $ref: "#/components/schemas/CreditCardInfoWithTrack"
                ConsentCreator:
                  type: object
                  properties:
                    MerchID:
                      type: integer
                      example: 1
                    CustomerRefID:
                      type: string
                      example: A123456
                    ServiceDescrip:
                      type: string
                      example: ""
                    RPGUID:
                      $ref: "#/components/schemas/RPGUID"
                    StartDate:
                      $ref: "#/components/schemas/Date"
                    NumPayments:
                      type: integer
                      example: 10
                    TotalAmount:
                      type: number
                      format: float
                      example: 10000
                    Period:
                      type: integer
                      example: 2
                AcctHolder:
                  $ref: "#/components/schemas/Person"
                EndCustomer:
                  $ref: "#/components/schemas/Person"
            example:
              ccCardInfo:
                AccountNumber: "4111111111111111"
                ExpMonth: 10
                ExpYear: 23
                CSV: "123"
                Track: "%B4788250000028291^VISA
                  TEST/GOOD^231010100733000000?;4895390000000013=15121010000073\
                  3?"
              ConsentCreator:
                MerchID: 1
                CustomerRefID: A123456
                ServiceDescrip: ""
                RPGUID: ""
                StartDate: /Date(1564409121413-0400)/
                NumPayments: 10
                TotalAmount: 10000
                Period: 2
              AcctHolder:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
              EndCustomer:
                Firstname: Sean
                Lastname: Wood
                Company: ""
                Title: ""
                Url: ""
                BillIngAdress:
                  Address1: 123 Fake St.
                  Address2: ""
                  City: PORTLAND
                  State: ME
                  ZIP: "04106"
                  Country: USA
                Email: robert@easypaysolutions.com
                Phone: "8777248472"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentRecurring_CreateResult:
                    type: object
                    properties:
                      ConsentID:
                        type: integer
                        example: 22
                      CreationSuccess:
                        type: boolean
                        example: true
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      MySched:
                        type: array
                        items:
                          type: object
                          properties:
                            Remaining:
                              type: number
                              format: float
                              example: 9000
                            SchedID:
                              type: integer
                              example: 41
                            paymentAmt:
                              type: number
                              format: float
                              example: 1000
                            paymentDate:
                              $ref: "#/components/schemas/Date"
                            paymentNo:
                              type: integer
                              example: 1
                      PreConsentAuthMessage:
                        type: string
                        example: "APPROVED 298734                 "
                      PreConsentAuthSuccess:
                        type: boolean
                        example: true
                      PreConsentAuthTxID:
                        type: integer
                        example: 66
                      RespMsg:
                        type: string
                        example: "Success : Created Recurring Consent ID : 000022"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ConsentRecurring/Modify:
    post:
      summary: Modify a recurring consent
      operationId: modifyRecurringConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 42
                  description: ID of the consent to be modified
                ConsentMods:
                  type: object
                  properties:
                    ExpMonth:
                      type: integer
                      example: 10
                      description: Expiration month of the card
                    ExpYear:
                      type: integer
                      example: 2028
                      description: Expiration year of the card
                    Email:
                      type: string
                      format: email
                      example: sean@easypaysolutions.com
                      description: Email associated with the consent
                    Zip:
                      type: string
                      example: "04101"
                      description: ZIP code associated with the consent
                    CustomerRefID:
                      type: string
                      example: A123456
                      description: Customer reference ID
                    ServiceDescrip:
                      type: string
                      example: Test
                      description: Description of the service
                    RPGUID:
                      $ref: "#/components/schemas/RPGUID"
            example:
              ConsentID: 42
              ConsentMods:
                ExpMonth: 10
                ExpYear: 2028
                Email: sean@easypaysolutions.com
                Zip: "04101"
                CustomerRefID: A123456
                ServiceDescrip: Test
                RPGUID: ""
      responses:
        "200":
          description: Recurring consent successfully modified
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentRecurring_ModifyResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ModifySuccess:
                        type: boolean
                        example: true
                      RespMsg:
                        type: string
                        example: "Success : Modified Consent ID : 42"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: |
        For values which should not be altered use value 1 or “1”
  /APIcardProcREST/v1.0.0/ConsentSubscription/Modify:
    post:
      summary: Modify an existing subscription consent
      operationId: modifySubscriptionConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  example: 12
                  description: ID of the consent to be modified
                ConsentMods:
                  type: object
                  properties:
                    ExpMonth:
                      type: integer
                      example: 10
                      description: Expiration month of the card
                    ExpYear:
                      type: integer
                      example: 2022
                      description: Expiration year of the card
                    Email:
                      type: string
                      format: email
                      example: noreply@easypaysolutions.com
                      description: Email associated with the consent
                    Zip:
                      type: string
                      example: "04106"
                      description: ZIP code associated with the consent
                    RPGUID:
                      $ref: "#/components/schemas/RPGUID"
                    CustomerRefID:
                      type: string
                      example: A123456
                      description: Customer reference ID
                    ServiceDescrip:
                      type: string
                      example: Test
                      description: Description of the service
                    PaymentAmt:
                      type: number
                      format: float
                      example: 10
                      description: Payment $ amount
                    PaymentAdjustDate:
                      type: string
                      format: date-time
                      example: 2019-04-29T11:26:11.093Z
                      description: Date and time for payment adjustment
                    OnHold:
                      type: boolean
                      example: false
                      description: Whether the consent is on hold
            example:
              ConsentID: 12
              ConsentMods:
                ExpMonth: 10
                ExpYear: 2022
                Email: noreply@easypaysolutions.com
                Zip: "04106"
                RPGUID: ""
                CustomerRefID: A123456
                ServiceDescrip: Test
                PaymentAmt: 10
                PaymentAdjustDate: 2019-04-29T11:26:11.093Z
                OnHold: false
      responses:
        "200":
          description: Subscription consent successfully modified
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrCode:
                    $ref: "#/components/schemas/ErrCode"
                  ErrMsg:
                    $ref: "#/components/schemas/ErrMsg"
                  FunctionOk:
                    $ref: "#/components/schemas/FunctionOk"
                  RespMsg:
                    type: string
                    example: Consent successfully modified
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Intl/ReceiptGenerate:
    post:
      summary: Generate a receipt for an international transaction
      operationId: generateIntlReceipt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                REFID:
                  type: string
                  example: 5eef4782-5be1-11ef-bbc1-46647bd59a7a
                  description: The transaction ID
                ReceiptType:
                  type: integer
                  example: 23
                  description: The type of receipt, 23 for international
                Recipient:
                  $ref: "#/components/schemas/Recipient"
            example:
              REFID: 5eef4782-5be1-11ef-bbc1-46647bd59a7a
              ReceiptType: 23
              Recipient: 1
      responses:
        "200":
          description: Successfully generated receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  Intl_ReceiptGenerateResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ReceiptHtml:
                        type: string
                        example: >
                          <!DOCTYPE html>
                          <html xmlns="http://www.w3.org/1999/xhtml">
                          <head runat="server">
                          <meta name="viewport" content="width=device-width, initial-scale=1" />
                          <title></title>
                          </head>
                          <body>
                          <form id="form1" runat="server">
                          <div style="font-size:12px;font-family:Verdana" align="center">
                          <h3>SALE RECEIPT</h3><br />
                          <div><label>TEST MERCHANT TWO</label><br />
                          <label>222 RAND ROAD</label><br />
                          <label>LONDON, AK 54321</label><br />
                          <label>(555) 555-5555</label></div><br /><br />
                          <table style="text-align:left">
                          <tr>
                          <td>CARDHOLDER NAME:</td>
                          <td><label>Smith, Nancy</label></td>
                          </tr>
                          <tr>
                          <td>ACCT NUMBER:</td>
                          <td><label>x1111</label></td>
                          </tr>
                          <tr><td>EXP DATE:</td>
                          <td><label>xxxx</label></td>
                          </tr>
                          <tr>
                          <td>TX ID:</td>
                          <td><label>5eef4782-5be1-11ef-bbc1-46647bd59a7a</label></td>
                          </tr>
                          <tr>
                          <td><label>PATIENT</label> REF ID:</td>
                          <td><label>N/A</label></td>
                          </tr>
                          <tr>
                          <td>TX DATE:</td>
                          <td><label>8/16/2024 11:08:23 AM</label></td>
                          </tr>
                          <tr>
                          <td>CARD TYPE:</td>
                          <td><label>VI</label></td>
                          </tr>
                          <tr>
                          <td>ENTRY METHOD:</td>
                          <td><label>Manual Entry</label></td>
                          </tr>
                          <tr>
                          <td>AMOUNT:</td>
                          <td><asp:label runat="server">£8.14 GBR</asp:label></td>
                          </tr>
                          <tr>
                          <td></td>
                          <td><asp:label runat="server"></asp:label></td>
                          </tr>
                          <tr>
                          <td>TOTAL(GBP):</td>
                          <td><label>£8.14 GBR</label></td>
                          </tr>
                          </table><br />
                          <div><label>THANK YOU FOR YOUR PATRONAGE</label><br />
                          <label>All Sales Final</label><br />
                          <div><label>I agree to pay TEST MERCHANT TWO the above amount according to card issuer agreement.</label></div>
                          <br /><br /><div><label>SIGNATURE</label></div><br />
                          <div>___________________________________</div>
                          <h3><b>MERCHANT COPY</b></h3></div></div>
                          </form></body></html>
                        description: The HTML content of the receipt
                      RespMsg:
                        type: string
                        example: Successfully Returned Transaction Receipt Markup
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        REFID will be the transaction ID  

        ReceiptType will always be 23 for International  

        Merchant copy use Recipient = 1  

        Customer Copy use Recipient = 2  

        For Dual Receipt use Recipient = 3  


        **Consuming the Response**  

        The member named ReceiptHtml holds the receipt data  

        Important you must replace all Unicode characters to consume clean HTML  

        Example : CleanHtml = Regex.Replace(my, @"[^\u0000-\u007F]+", string.Empty);
  /APIcardProcREST/v1.0.0/Intl/ProcPayment:
    post:
      summary: Process a payment consent for international transactions
      operationId: processIntlConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TokenID:
                  type: string
                  example: a64d8a2a-5994-11ef-95fc-3e580ecac30f
                  description: The consent token ID for the transaction returned when creating a
                    sale using the international widget
                ChargeAmt:
                  type: number
                  format: float
                  example: 5
                  description: The amount to be charged
            example:
              TokenID: a64d8a2a-5994-11ef-95fc-3e580ecac30f
              ChargeAmt: 5
      responses:
        "200":
          description: Successfully processed the payment consent
          content:
            application/json:
              schema:
                type: object
                properties:
                  Intl_ProcPaymentResult:
                    type: object
                    properties:
                      AuthorizedAmt:
                        type: number
                        format: float
                        example: 5
                        description: The amount that was authorized
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Successfully charged Consent a64d8a2a-5994-11ef-95fc-3e580ecac30f For
                          $5.00
                      TransID:
                        type: string
                        example: a63f6936-5994-11ef-8613-3e580ecac30f
                        description: The transaction ID for the processed payment
                      TxApproved:
                        type: boolean
                        example: true
                        description: Indicates if the transaction was approved
                      TxnCode:
                        type: string
                        example: ""
                        description: Transaction code, if applicable
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        This API call is for merchant accounts that are specifically
        configured for international processing.
  /APIcardProcREST/v1.0.0/Intl/QueryTransaction:
    post:
      summary: Query international transactions
      operationId: queryIntlTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryTransaction"
            example:
              Query: (F='328217c4-7059-11ef-a730-a6469c956913')&&(B=3)&&(E=1)
      responses:
        "200":
          description: Successfully queried transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  Intl_Transaction_QueryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 1
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Transaction Records : 1"
                        description: Response message
                      Transactions:
                        type: array
                        items:
                          type: object
                          properties:
                            Action:
                              type: string
                              enum:
                                - Sale
                                - Capture
                                - CreditVoid
                                - Get_Trans_Status
                                - Get_Trans_Details
                                - Get_Trans_Status_By_Order
                                - Recurring_Sale
                              example: SALE
                              description: The action specified when submitting a processing request with the
                                third-party processor.
                            Address:
                              type: string
                              example: generating sale
                            Amount:
                              type: number
                              format: float
                              example: 0
                            Card:
                              type: string
                              example: "0042"
                            CardType:
                              type: string
                              example: VI
                              description: The brand of the card used in the transaction
                            Card_Expiration_Date:
                              type: string
                              example: 12/2025
                              description: Expiration date of the card in MM/YYYY format
                            Card_Token:
                              type: string
                              example: 4332225cc2db2f4de92583af2e6f62d942650909a5a5282138eb393158e27a63
                              description: A value that represents the card number with secured details
                            City:
                              type: string
                              example: Auburn
                            Country:
                              type: string
                              example: US
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            Currency:
                              type: string
                              enum:
                                - CAD
                                - EUR
                                - GBP
                                - USD
                              nullable: true
                              example: null
                              description: The currency type for the international transaction
                            Decline_Reason:
                              type: string
                              example: ""
                            Descriptor:
                              type: string
                              example: ""
                              description: Description of the payment transaction, e.g. the product or service
                                name
                            Email:
                              type: string
                              example: ndraper@easypaysolutions.com
                            Fname:
                              type: string
                              example: Nancy
                            ID:
                              type: integer
                              example: 570
                            Lname:
                              type: string
                              example: Draper
                            MerchID:
                              type: integer
                              example: 1
                            Order_ID:
                              type: string
                              example: B7A6A9DF
                            Phone:
                              type: string
                              example: ""
                            PostalCode:
                              type: string
                              example: "32658"
                            REFID:
                              type: string
                              example: ""
                            RPGUID:
                              $ref: "#/components/schemas/RPGUID"
                            Recurring_Token:
                              type: string
                              example: a4b1f2ec-5434-11ef-ac32-e62c2d2c5cd6
                              description: The token for the recurring transaction used to charge a card that
                                has been saved previously
                            Result:
                              type: string
                              example: SUCCESS
                            Schedule_ID:
                              type: string
                              nullable: true
                              example: null
                            State:
                              type: string
                              example: ME
                            Status:
                              $ref: "#/components/schemas/TxStatusInternational"
                            Trans_Date:
                              type: string
                              example: Sep 11 2024  4:16PM
                              description: The time of the transaction, in MMM DD YYYY h:mmtt format.
                            Trans_ID:
                              type: string
                              example: 328217c4-7059-11ef-a730-a6469c956913
                            bank_date:
                              type: string
                              nullable: true
                              example: null
                              description: The date the transaction was processed by the bank, in YYYY-MM-DD
                                HH:mm:ss format.
                            chargeback_date:
                              type: string
                              nullable: true
                              example: null
                              description: The date the chargeback was completed, in YYYY-MM-DD HH:mm:ss
                                format.
                            reason_code:
                              type: string
                              nullable: true
                              example: null
                              description: The provider reason code and description for the transaction.
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        **Query Strings:**  

        EasyPay provides a robust query language which provides a means for you to obtain specific records.  


        In order to Create a Query you will build logical terms and join them with Logical AND or Logical OR.  


        Use && for Logical AND  


        Use || for Logical OR  


        For instance, Let's say you want to return all records from merchant record 1 which were created in JUNE.  


        HERE IS THE QUERY: (A=1)&&(C>='6/1/2024')&&(C<'7/1/2024') (notice that any TEXT or DATES use a single Quote delimiter while numeric items do not)  


        Each Letter represents a variable and the following chart shows each meaning.


        |   |                |

        |---|----------------|

        | A | MerchID        |

        | B | Status         |

        | C | CreatedON      |

        | D | LastName       |

        | E | Result         |

        | F | TransID        |

        | J | FirstName      |

        | L | Amount         |

        | M | REFID          |

        | Q | CardNum Last 4 |

        | N | RPGUID         |

        | W | ConsentID      |  


        EasyPay stores a copy of the transactional data on its servers. For international transactions data is stored in such a way that we may have multiple records in our system for a single credit card authorization or OrderID. Two Fields of Interest are Result and Status.  


        | Seq |  OrderID | Action |  Result  |  Status  |  

        |-----|----------|--------|----------|----------|

        |  1  | 09B370DD |  SALE  | REDIRECT | REDIRECT |

        |  2  | 09B370DD |  SALE  | REDIRECT |   3DS    |

        |  3  | 09B370DD |  SALE  | SUCCESS  | SETTLED  |  


        The above table shows three records we record as we process a single transaction on the International Processing Servers. As you request transaction information you are most likely only interested in the last entry which shows SUCCESS and SETTLED as the other two are simply intermediate steps.  


        The following shows query enum values for RESULT and STATUS and ACTION  


        | E Result Values |    |

        |-----------------|----|

        | ALL             | -1 |

        | SUCCESS         |  1 |

        | DECLINED        |  2 |

        | REDIRECT        |  3 |

        | ACCEPTED        |  4 |

        | ERROR           |  5 |

        | UNDEFINED       |  6 |


        | B Status Values |    |

        |-----------------|----|        

        | ALL             | -1 |

        | PENDING         |  1 |

        | REDIRECT        |  2 |

        | SETTLED         |  3 |

        | REVERSAL        |  4 |

        | REFUND          |  5 |

        | DECLINED        |  6 |

        | PENDING         |  7 |

        | CHARGEBACK      |  8 |

        | VOID            |  9 |


        | G Action Values |    |

        |-----------------|----|

        | ALL	          | -1 |

        | SALES           |  1 |

        | CREDITVOID      |  2 |

        | RECURRING_SALE  |  3 |  


        So, to return all Transactions which are successfully settled please use the following query:  


        Result ➔ E Use 1 for Success  

        Status ➔ B Use 3 for Settled


        Your query now becomes the following  

        {  
          "Query": "(B=3)&&(E=1)"  
        }  

        ___

        You can further limit your query by specifying a Date Range  


        {  
          "Query": "(B=3)&&(E=1)&&(C>’2024-09-01’)"  
        }  

        ___

        If you want to limit your results to transactions which are REFUNDS then use ACTION CREDITVOID  


        Or specifically (G=2)  

        {  
          "Query": "(B=3)&&(E=1)&&(C>'2024-09-01')&&(G=2)"  
        }  

        ___

        If you want to limit your results to transactions which are Processed from stored Card use ACTION RECURRING_SALE  


        Or specifically (G=3)  

        {  
          "Query": "(B=3)&&(E=1)&&(C>'2024-09-01')&&(G=3)"  
        }  

        ___

        If you are looking for a particular transaction based on its unique TransID, you can do the following:  

        {  
          "Query": "(F='328217c4-7059-11ef-a730-a6469c956913')&&(B=3)&&(E=1) "  
        }  

        This will return the transaction of interest without returning the intermediate steps as noted above.  

        ___

        If you want to query by Last name on a specific Date  

        {  
          "Query": "(C>'2024-09-16')&&(C<'2024-09-17')&&(D='SMITH')&&(B=3)&&(E=1)"  
        }  

        ___

        If you are looking for a specific Amount  

        {  
          "Query": "(L=4.44)&&(B=3)&&(E=1)"  
        }  

        ___

        If you are looking for a specific Amount within a date range  

        {  
          "Query": "(L=4.44)&&(C>'2024-09-16')&&(C<'2024-09-17')&&(B=3)&&(E=1)"  
        }  

        ___

        If you are looking for a particular Card Number ( use last 4 digits ) for settled records  

        {  
          "Query": "(Q='1111')&&(B=3)&&(E=1)"  
        }  

        ___

        If you are looking for a particular Reference ID  

        {  
          "Query": "(M='ABC 888')&&(B=3)&&(E=1)"  
        }  

        ___

        If you are looking for a particular saved card transaction based on the ConsentID  

        {  
          "Query": "(W='c30eca54-75c1-11ef-b9e6-7aa481e33aa5')&&(B=3)&&(E=1)"  
        }
  /APIcardProcREST/v1.0.0/Intl/VoidCredit:
    post:
      summary: Void an international transaction
      operationId: voidIntlCredit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TransID:
                  type: string
                  example: a88ed0e4-5a3b-11ef-b49b-46647bd59a7a
                  description: The transaction ID of the transaction to be voided
                CreditAmt:
                  type: number
                  format: float
                  example: 5
                  description: The amount of the transaction to be voided
            example:
              TransID: a88ed0e4-5a3b-11ef-b49b-46647bd59a7a
              CreditAmt: 5
      responses:
        "200":
          description: Successfully voided the transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  Intl_VoidCredtResult:
                    type: object
                    properties:
                      CreditAmt:
                        type: number
                        format: float
                        example: 5
                        description: The amount that was credited
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Succesfull VOID/Credit
                        description: Response message
                      TransID:
                        type: string
                        example: a88ed0e4-5a3b-11ef-b49b-46647bd59a7a
                        description: The transaction ID for the processed void
                      TxApproved:
                        type: boolean
                        example: true
                        description: Indicates if the transaction was approved
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        This API call is for merchant accounts that are specifically
        configured for international processing.
  /PayForm/Initialize:
    post:
      summary: Initialize PayForm
      operationId: initializePayForm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InitParams:
                  type: object
                  properties:
                    MerchID:
                      type: integer
                      description: Use 1 unless your account has multiple merchant records. The
                        merchant ID for the transaction.
                      example: 1
                    WTYPE:
                      type: string
                      enum:
                        - PF
                        - PA
                      example: PF
                      description: |
                        The widget type for the PayForm
                          - PF: Regular PayForm
                          - PA: International PayForm
                    PostURL:
                      type: string
                      description: The URL where real-time values will be posted after payment
                        completion.
                      example: https://easypay7.com/swidget/JsonGet.aspx
                    RedirectURL:
                      type: string
                      description: The URL to redirect to after processing the payment.
                      example: https://easypay8.com/CYWidget/
                    REF_ID:
                      $ref: "#/components/schemas/REF_ID"
                    RPGUID:
                      $ref: "#/components/schemas/RPGUID"
                    EndPoint:
                      type: string
                      description: Points to a specific web app on our servers. Should always have the
                        value of PayForm/PF.aspx.
                      example: PayForm/PF.aspx
                    EINDEX:
                      $ref: "#/components/schemas/EINDEX"
                    Amounts:
                      $ref: "#/components/schemas/Amounts"
                    Payer:
                      type: object
                      properties:
                        Firstname:
                          type: string
                          description: The first name of the payer.
                          example: John
                        Lastname:
                          type: string
                          description: The last name of the payer.
                          example: Doe
                        Email:
                          type: string
                          description: The email of the payer.
                          example: ""
                        Phone:
                          type: string
                          description: The phone of the payer.
                          example: ""
                        BillingAddress:
                          type: object
                          properties:
                            StreetAddress:
                              type: string
                              description: The street address of the payer.
                              example: ""
                            City:
                              type: string
                              description: The city of the payer.
                              example: ""
                            State:
                              type: string
                              description: The state of the payer.
                              example: ""
                            ZIP:
                              type: string
                              description: The ZIP code of the payer.
                              example: 4048
                            Country:
                              type: string
                              description: The country of the payer.
                              example: ""
                    WidOptions:
                      type: object
                      properties:
                        eVisible:
                          type: string
                          description: Hex digits controlling field visibility.
                          example: "0665"
                        eReadOnly:
                          type: string
                          description: Hex digits dictating read-only fields.
                          example: "0040"
                        eStyles:
                          type: string
                          description: Hex digits controlling form styling.
                          example: "0001"
                        eSubmission:
                          type: string
                          description: Hex digits controlling submission options.
                          example: 0A01
                        eColors:
                          type: string
                          description: String controlling optional color schemes.
                          example: "#ffffff,#428bca,#007bff,#212121,#ffffff,#212121,#ffffff"
            example:
              InitParams:
                MerchID: 1
                WTYPE: PF
                PostURL: https://easypay7.com/swidget/JsonGet.aspx
                RedirectURL: https://easypay8.com/CYWidget/
                REF_ID: A97689#
                RPGUID: 92e1e15c-f64a-466b-8733-9b518b9f374c
                EndPoint: PayForm/PF.aspx
                EINDEX: "300"
                Amounts:
                  Amount: 20
                  Surcharge: 0
                  TotalAmt: 20
                Payer:
                  Firstname: John Doe
                  Lastname: ""
                  BillingAddress:
                    StreetAddress: ""
                    City: ""
                    State: ""
                    ZIP: 4048
                    Country: ""
                  Email: ""
                  Phone: ""
                WidOptions:
                  eVisible: "0665"
                  eReadOnly: "0040"
                  eStyles: "0001"
                  eSubmission: 0A01
                  eColors: "#ffffff,#428bca,#007bff,#212121,#ffffff,#212121,#ffffff"
      responses:
        "200":
          description: Successful initialization of PayForm
          content:
            application/json:
              schema:
                type: object
                properties:
                  PaymentInitResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      PaymentUrl:
                        type: string
                        description: The URL to the initialized PayForm.
                        example: https://easypay5.com/swidget/?eGUID=239F97C4&CS=021&Digest=tru49A2ncbyvHoaIa6T81Q
                      RespMsg:
                        type: string
                        description: Response message indicating the result of the operation
                        example: successfully returned payment Url
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Call this method to initialize a payment form used for collecting
        payments, saving card-on-file data, or both. The call returns the URL
        used to open the form.


        For details on configurations and options, view our builder tool at https://easypay8.com/byopayform/
  /APIcardProcREST/v1.0.0/Query/AccountProfile:
    post:
      summary: Query account profile
      operationId: queryAccountProfile
      responses:
        "200":
          description: Successfully returned account profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  AccountProfileQryResult:
                    type: object
                    properties:
                      AccountProfile:
                        type: object
                        properties:
                          AccountCode:
                            type: string
                            example: EP9116875
                          AccountName:
                            type: string
                            example: EP DEV ACCT
                          AutoSchedule:
                            type: boolean
                            example: true
                            description: Indicates whether the account is set to automatically process
                              scheduled payments from recurring and subscription
                              consents.
                          AutoSettle:
                            type: boolean
                            example: true
                            description: Indicates whether the account is set to automatically settle
                              transactions at a specified time of day
                          AutoSettleHour:
                            type: integer
                            example: 0
                            description: The hour of the day at which the account is set to automatically
                              settle transactions
                          AutoSettleMinute:
                            type: integer
                            example: 0
                            description: The minute of the hour at which the account is set to automatically
                              settle transactions
                          BatchReport:
                            type: boolean
                            example: false
                            description: Indicates whether a batch report should be generated each night
                              after the settlement process runs.
                          DateCreated:
                            $ref: "#/components/schemas/Date"
                          DateModified:
                            $ref: "#/components/schemas/Date"
                          ID:
                            type: integer
                            example: 205
                          IndustryCode:
                            type: string
                            example: ""
                          TimeZone:
                            type: string
                            example: Dateline Standard Time
                          TransReport:
                            type: boolean
                            example: false
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Successfully Returned Account profile for Account ID 205
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ACHTransaction:
    post:
      summary: Query ACH transactions
      operationId: queryACHTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryTransaction"
            example:
              Query: (H=1405)
      responses:
        "200":
          description: Successfully returned ACH transaction records
          content:
            application/json:
              schema:
                type: object
                properties:
                  ACHTransaction_QueryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 1
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Transaction Records : 1"
                        description: Response message detailing the result
                      Transactions:
                        type: array
                        items:
                          type: object
                          properties:
                            AcctHolderID:
                              type: integer
                              example: 1127
                              description: Unique identifier for the account holder associated with the
                                transaction.
                            AcctLast4:
                              type: string
                              example: "0277"
                              description: Last four digits of the account number for identification purposes.
                            AcctType:
                              type: string
                              enum:
                                - PersonalChecking
                                - PersonalSavings
                                - BusinessChecking
                                - BusinessSavings
                              example: PersonalChecking
                              description: Type of account associated with the transaction
                            Amt:
                              type: number
                              format: float
                              example: 30.5
                              description: The $ amount of the transaction.
                            AuthID:
                              type: string
                              example: "69019079"
                              description: Unique identifier for the authorization of the transaction.
                            BatchLogID:
                              type: integer
                              example: 0
                              description: Identifier for the batch log associated with the transaction.
                            BatchNO:
                              type: integer
                              example: 112
                              description: Number of the batch in which the transaction was processed.
                            BatchStatus:
                              $ref: "#/components/schemas/BatchStatus"
                            ChangedBy:
                              type: string
                              nullable: true
                              example: null
                              description: Identifier for the user or process that last modified the
                                transaction record.
                            ChangedOn:
                              $ref: "#/components/schemas/Date"
                            ConsentID:
                              type: integer
                              example: 0
                              description: Identifier for the consent associated with the transaction, if
                                applicable.
                            CreatedBy:
                              type: string
                              example: Token 37564
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            Credits:
                              type: number
                              format: float
                              example: 0
                              description: Amount of credits associated with the transaction, if any.
                            CustName:
                              type: string
                              example: APIACH Sally
                              description: Name of the customer associated with the transaction.
                            EndCustID:
                              type: integer
                              example: 35348
                              description: Unique identifier for the end customer associated with the
                                transaction.
                            FirstName:
                              type: string
                              example: Sally
                            ID:
                              type: integer
                              example: 1405
                              description: Unique identifier for the transaction record.
                            LastName:
                              type: string
                              example: APIACH
                            MerchID:
                              type: integer
                              example: 1
                              description: Unique identifier for the merchant associated with the transaction.
                            Origin:
                              type: string
                              example: "API       "
                            REF_ID:
                              $ref: "#/components/schemas/REF_ID"
                            RPGUID:
                              $ref: "#/components/schemas/RPGUID"
                            RefTxID:
                              $ref: "#/components/schemas/RefTxID"
                            ResolvedOn:
                              $ref: "#/components/schemas/Date"
                            ReturnReason:
                              type: string
                              example: ""
                            SettledOn:
                              $ref: "#/components/schemas/Date"
                            TXN_DATETIME:
                              $ref: "#/components/schemas/Date"
                            TXstamp:
                              type: string
                              example: "20240703"
                              description: The date when the transaction occurred, in MMDDYY format.
                            TxSTATUS:
                              $ref: "#/components/schemas/TxStatus"
                            TxType:
                              type: string
                              example: ACHDEBIT
                            UniqueID:
                              type: string
                              example: 167901CDE082BC57
                            UserID:
                              type: integer
                              example: 0
                            ValMsg:
                              type: string
                              example: Success
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentAnnualReceipt:
    post:
      summary: Query annual consent receipt
      operationId: queryAnnualConsentReceipt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  description: ID of the consent
                  example: 2
                ReceiptType:
                  $ref: "#/components/schemas/ReceiptType"
            example:
              ConsentID: 2
              ReceiptType: 1
      responses:
        "200":
          description: Successfully returned annual consent receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnualReceiptQryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ReceiptHtml:
                        type: string
                        example: >
                          <!DOCTYPE html>

                          <html xmlns="http://www.w3.org/1999/xhtml">

                          <head runat="server">

                          <meta name="viewport" content= width=device-width, initial-scale=1 />

                          <title></title>

                          </head>

                          <body>

                          <form id=form1 runat=server>

                          <div style=font-size:12px;font-family:Verdana align=center>

                          <h3>SALE RECEIPT</h3>

                          <br />

                          <div>

                          <label>REA010 RETAIL</label>

                          <br />

                          <label>1307 BROAD HOLLOW ROAD</label>

                          <br />

                          <label>ANYWHERE, ME 11747</label>

                          <br /><label></label>

                          </div><br /> <br />

                          <table style=text-align:left>

                          <tr>

                          <td>CARDHOLDER NAME:</td>

                          <td><label>Wood, Sean</label></td>

                          </tr>

                          <tr>

                          <td>ACCT NUMBER:</td>

                          <td><label>x1118</label></td>

                          </tr>

                          <tr>

                          <td>EXP DATE:</td>

                          <td><label>xxxx</label></td>

                          </tr>

                          <tr>

                          <td>TX ID:</td>

                          <td><label>4117</label></td>

                          </tr>

                          <tr>

                          <td>SEQ:</td>

                          <td><label>5981</label></td>

                          </tr>

                          <tr><td>APPROVAL CODE:</td><td><label>OK5100</label></td></tr>

                          <tr>

                          <td><label>PATIENT</label> REF ID:</td>

                          <td><label>12456</label></td>

                          </tr>

                          <tr>

                          <td>TX DATE:</td>

                          <td><label>12/13/2024 9:10:44 AM</label></td>

                          </tr>

                          <tr>

                          <td>CARD TYPE:</td>

                          <td><label>VI</label></td>

                          </tr>

                          <tr>

                          <td>ENTRY METHOD:</td>

                          <td><label>ManualEntry</label></td>

                          </tr>

                          <tr>

                          <td>AMOUNT:</td>

                          <td><asp:label runat=server>$10.00</asp:label></td>

                          </tr>

                          <tr>

                          <td></td>

                          <td><asp:label runat=server></asp:label></td>

                          </tr>

                          <tr>

                          <td>TOTAL(USD):</td>

                          <td><label>$10.00</label></td>

                          </tr>

                          </table>

                          <br />

                          <div>

                          <label>THANK YOU FOR YOUR PATRONAGE</label><br />

                          <label>All Sales Final</label><br />

                          <div><label>I agree to pay REA010 RETAIL the above amount according to card issuer agreement.</label></div>

                          <br /><br />

                          <div><label>SIGNATURE</label></div>

                          <br />

                          <div>___________________________________</div>

                          <h3><b>MERCHANT COPY</b></h3>

                          </div>

                          </div>

                          </form>

                          </body>

                          </html>
                        description: HTML markup of the receipt
                      RespMsg:
                        type: string
                        example: Successfully Returned Transaction Receipt Markup
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/BatchLog:
    post:
      summary: Query batch logs
      operationId: queryBatchLog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryBatchLog"
            example:
              Query: (C>='7/19/2023')&&(C<'7/20/2023')
      responses:
        "200":
          description: Successfully returned batch log records
          content:
            application/json:
              schema:
                type: object
                properties:
                  Batch_Log_QueryResult:
                    type: object
                    properties:
                      BatchLogs:
                        type: array
                        items:
                          type: object
                          properties:
                            BatchAmt:
                              type: number
                              format: float
                              example: 110
                            BatchClose:
                              type: string
                              example: "020224054035"
                            BatchNO:
                              type: integer
                              example: 512
                            BatchOpen:
                              type: string
                              example: "020224054031"
                            BatchRecs:
                              type: integer
                              example: 3
                              description: The number of transactions that were processed in the batch.
                            Code:
                              type: string
                              example: A
                            CreatedBy:
                              type: string
                              example: AUTOSCHED
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            FinishedOn:
                              $ref: "#/components/schemas/Date"
                            ID:
                              type: integer
                              example: 612
                            MerchID:
                              type: integer
                              example: 3
                            Released:
                              type: integer
                              example: 0
                            SettleResp:
                              type: string
                              example: APPROVAL Batch:512:Recs:3:$110.00
                            TxLOCK:
                              $ref: "#/components/schemas/TxLock"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 9
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Batch Log Records : 9"
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentAnnual_FullDetail:
    post:
      summary: Get full detail of annual consent
      operationId: getConsentAnnualFullDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  description: ID of the consent
                  example: 12
            example:
              ConsentID: 12
      responses:
        "200":
          description: Successfully returned full detail for consent
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_FullDetailResult:
                    type: object
                    properties:
                      AccounttHolder:
                        $ref: "#/components/schemas/AccountHolder"
                      ConsentAnnual:
                        type: object
                        properties:
                          AcctHolderFirstName:
                            type: string
                            example: JOHN
                          AcctHolderID:
                            type: integer
                            example: 1
                          AcctHolderLastName:
                            type: string
                            example: DOE
                          AcctNo:
                            type: string
                            example: "1111"
                          AuthTxID:
                            type: integer
                            example: 15
                          CreatedBy:
                            type: string
                            example: vidya_Venkatraman
                          CreatedOn:
                            $ref: "#/components/schemas/Date"
                          CustID:
                            type: integer
                            example: 15
                          CustomerRefID:
                            type: string
                            example: A12345NO-99
                          EndDate:
                            $ref: "#/components/schemas/Date"
                          ID:
                            type: integer
                            example: 12
                          IsEnabled:
                            type: boolean
                            example: true
                          LimitLifeTime:
                            type: number
                            format: float
                            example: 1000000
                          LimitPerCharge:
                            type: number
                            format: float
                            example: 1000000
                          MerchID:
                            type: integer
                            example: 1
                          NumDays:
                            type: integer
                            example: 365
                          RPGUID:
                            $ref: "#/components/schemas/RPGUID"
                          ServiceDescrip:
                            type: string
                            example: ""
                          StartDate:
                            $ref: "#/components/schemas/Date"
                      EndCustomer:
                        $ref: "#/components/schemas/Customer"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successfully Returned Full Detail For Consent ID : 12"
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentAnnual:
    post:
      summary: Query annual consent
      operationId: queryConsentAnnual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryConsent"
            example:
              Query: (A=-1)&&(G=1)&&(H='True')
      responses:
        "200":
          description: Successfully returned consent records
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_QueryResult:
                    type: object
                    properties:
                      Consents:
                        type: array
                        items:
                          type: object
                          properties:
                            AcctHolderFirstName:
                              type: string
                              example: JOHN
                            AcctHolderID:
                              type: integer
                              example: 1
                            AcctHolderLastName:
                              type: string
                              example: DOE
                            AcctNo:
                              type: string
                              example: "1111"
                            AuthTxID:
                              type: integer
                              example: 15
                            CreatedBy:
                              type: string
                              example: John_Doe
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            CustID:
                              type: integer
                              example: 15
                            CustomerRefID:
                              type: string
                              example: A12345NO-99
                            EndDate:
                              $ref: "#/components/schemas/Date"
                            ID:
                              type: integer
                              example: 12
                            IsEnabled:
                              type: boolean
                              example: true
                            LimitLifeTime:
                              type: number
                              format: float
                              example: 1000000
                            LimitPerCharge:
                              type: number
                              format: float
                              example: 1000000
                            MerchID:
                              type: integer
                              example: 1
                            NumDays:
                              type: integer
                              example: 365
                            RPGUID:
                              $ref: "#/components/schemas/RPGUID"
                            ServiceDescrip:
                              type: string
                              example: ""
                            StartDate:
                              $ref: "#/components/schemas/Date"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 2
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Consent Records : 2"
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/ConsentAnnual/QueryApr:
    post:
      summary: Query annual consent with APR
      operationId: queryConsentAnnualApr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryConsent"
            example:
              Query: (A=1)&&(J='07e77e99-b16e-4b0f-8935-8d28e3fa28ef')
      responses:
        "200":
          description: Successfully returned consent records
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentAnnual_Query_AprResult:
                    type: object
                    properties:
                      Consents:
                        type: array
                        items:
                          type: object
                          properties:
                            AcctFirstName:
                              type: string
                              example: MTIP08-1 DMC 13A
                            AcctLastName:
                              type: string
                              example: MTIP08-1 DMC 13A
                            AcctMask:
                              type: string
                              example: 5457XXXXXXXX0012
                            CardExpDate:
                              type: string
                              example: "1225"
                            CardType:
                              type: string
                              example: MC
                            ConsentType:
                              $ref: "#/components/schemas/ConsentType"
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            CustomerRefID:
                              type: string
                              example: "197"
                            EndDate:
                              $ref: "#/components/schemas/Date"
                            ExpiredConsent:
                              type: boolean
                              example: false
                            ID:
                              type: integer
                              example: 386
                            IsEnabled:
                              type: boolean
                              example: true
                            LimitLifeTime:
                              type: number
                              format: float
                              example: 1000
                            LimitPerCharge:
                              type: number
                              format: float
                              example: 100
                            MerchID:
                              type: integer
                              example: 1
                            ModifiedOn:
                              $ref: "#/components/schemas/Date"
                            RPGUID:
                              $ref: "#/components/schemas/RPGUID"
                            Remaining:
                              type: number
                              format: float
                              example: 1000
                            StartDate:
                              $ref: "#/components/schemas/Date"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 1
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Consent Records : 1"
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Use this call to determine if the purchaser has a card on file. If
        you have created the consent (card on file) using a reference ID or
        PatientID then you can use the following Query to return an array of
        Consents ( Card On File Info ) for a particular patient with this
        PatientID:

        F='213456')&&(H=1)&& (C>='01/21/2024') This will return consents with a particular PatientID which are still enabled and have not yet expired ( use todays date ).


        You will want to present the user with the last 4 digits of each stored card so they can decide to choose a stored card or simply enter a new one. Easy Pay offers multiple ways of querying consent data. View the https://easypaysoftware.com/en/Querying Query Guide for more details.
  /APIcardProcREST/v1.0.0/Query/ConsentGeneral:
    post:
      summary: Consent General Query
      description: Query general consent records using specific filter criteria.
      operationId: consentGeneralQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryConsent"
            example:
              Query: (A=-1)&&(G=1)&&(E>='3/29/2023')&&(E<'4/29/2023')
      responses:
        "200":
          description: Successful response with consent records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentGeneral_QueryResult:
                    type: object
                    properties:
                      Consents:
                        type: array
                        items:
                          type: object
                          properties:
                            AcctHolderFirstName:
                              type: string
                              example: Sean
                            AcctHolderID:
                              type: integer
                              example: 1140
                            AcctHolderLastName:
                              type: string
                              example: Tester
                            AcctNo:
                              type: string
                              example: "0055"
                            AuthTxID:
                              type: integer
                              example: 2175
                            ConsentType:
                              $ref: "#/components/schemas/ConsentType"
                            CreatedBy:
                              type: string
                              example: Sally_Smith
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            CustID:
                              type: integer
                              example: 1165
                            CustomerRefID:
                              type: string
                              example: A1523644
                            EndDate:
                              $ref: "#/components/schemas/Date"
                            ID:
                              type: integer
                              example: 568
                            IsEnabled:
                              type: boolean
                              example: true
                            MerchID:
                              type: integer
                              example: 1
                            ModifiedBy:
                              type: string
                              example: ":"
                            ModifiedOn:
                              $ref: "#/components/schemas/Date"
                            NumDays:
                              type: integer
                              example: 2107
                            RPGUID:
                              $ref: "#/components/schemas/RPGUID"
                            ServiceDescrip:
                              type: string
                              example: REST Test
                            StartDate:
                              $ref: "#/components/schemas/Date"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 1
                      RespMsg:
                        type: string
                        example: "Successfully Returned Consent Records : 1"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentsExpiringCards:
    post:
      summary: Consents Expiring Cards
      description: Retrieve consents associated with cards that are expiring within a
        specified number of days.
      operationId: consentsExpiringCards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NumDays:
                  type: integer
                  description: The number of days within which the cards are expiring.
                  example: 20
            example:
              NumDays: 20
      responses:
        "200":
          description: Successful response with consents for expiring cards.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentsExpiringCardsResult:
                    type: object
                    properties:
                      Consents:
                        type: array
                        items:
                          $ref: "#/components/schemas/Consent"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 3
                      RespMsg:
                        type: string
                        example: ""
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentsExpiringCards_01:
    post:
      summary: Consents Expiring Cards 01
      description: Retrieve consents for cards expiring within a specified date range.
      operationId: consentsExpiringCards01
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartDate:
                  type: string
                  format: date
                  description: The start date of the expiration period.
                  example: 7/10/2023
                EndDate:
                  type: string
                  format: date
                  description: The end date of the expiration period.
                  example: 8/9/2023
            example:
              StartDate: 7/10/2023
              EndDate: 8/9/2023
      responses:
        "200":
          description: Successful response with consents for expiring cards in the
            specified range.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentsExpiringCards_01Result:
                    type: object
                    properties:
                      Consents:
                        type: array
                        items:
                          $ref: "#/components/schemas/Consent"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 1
                      RespMsg:
                        type: string
                        example: ""
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/Enum:
    post:
      summary: Query enumeration values
      operationId: queryEnum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  type: string
                  enum:
                    - ACHSttatus
                    - ACHType
                    - AConsentType
                    - BatchSettleMode
                    - BatchSettleStatus
                    - ConsentType
                    - IntAction
                    - IntlAction
                    - IntlResult
                    - IntlStatus
                    - Period
                    - ReceiptType
                    - Recipient
                    - RecurSchedStatus
                    - TxStatus
                    - TxType
                  example: TXStatus
                  description: The enumeration type to query.
            example:
              Query: TXStatus
      responses:
        "200":
          description: Successfully returned enum records
          content:
            application/json:
              schema:
                type: object
                properties:
                  Enum_QueryResult:
                    type: object
                    properties:
                      EnumItems:
                        type: array
                        items:
                          type: object
                          properties:
                            EnumText:
                              type: string
                              example: ALL
                            EnumValue:
                              type: integer
                              example: -1
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successfully Returned Enum Records : 6"
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ReceiptDetail:
    post:
      summary: Query receipt details
      operationId: queryReceiptDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  description: Transaction ID for which to retrieve the receipt details
                  example: 12
            example:
              TxID: 12
      responses:
        "200":
          description: Successfully returned receipt details
          content:
            application/json:
              schema:
                type: object
                properties:
                  ReceiptDetail_QueryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ReceiptInfo:
                        type: object
                        properties:
                          AC:
                            type: string
                            nullable: true
                            example: null
                            description: The Application Cryptogram code generated by the smart chip on the
                              card during a transaction, used to protect against
                              fraud.
                          AID:
                            type: string
                            nullable: true
                            example: A0000000031010
                            description: Small bits of information encoded on the chip that identify the
                              type of card.
                          ARC:
                            type: string
                            nullable: true
                            example: "00"
                            description: Authorization Response Code.
                          AcctHolderID:
                            type: integer
                            example: 1
                          CardHolder:
                            type: string
                            example: Sean Wood
                          CardNumber:
                            type: string
                            example: "1111"
                          CardType:
                            type: string
                            example: VI
                          EndCustID:
                            type: integer
                            example: 12
                          EndCustomer:
                            type: string
                            example: JOHN DOE
                          EntryType:
                            type: string
                            example: MANUAL
                          MerchAddress:
                            type: string
                            example: 45 spring street
                          MerchCity:
                            type: string
                            example: portland
                          MerchDescrip:
                            type: string
                            example: Test Merchant 1
                          MerchEmail:
                            type: string
                            example: vidya
                          MerchNumber:
                            type: string
                            example: "700000000768"
                          MerchPhone:
                            type: string
                            example: "2078548547"
                          MerchState:
                            type: string
                            example: Maine
                          MerchTID:
                            type: string
                            nullable: true
                            example: null
                            description: Terminal ID of the merchant assigned to a specific payment terminal
                              used by the merchant, identifying the POS device.
                          MerchZip:
                            type: string
                            example: "04101"
                          RefID:
                            type: string
                            example: ""
                          TSI:
                            type: string
                            nullable: true
                            example: F800
                            description: Transaction Status Indicator; indicates the functions performed in
                              transaction.
                          TVR:
                            type: string
                            nullable: true
                            example: 8000
                            description: Transaction Verification Result.
                          TxAmount:
                            type: number
                            format: float
                            example: 0
                          TxDateTime:
                            $ref: "#/components/schemas/Date"
                          TxID:
                            type: integer
                            example: 12
                          TxStatus:
                            $ref: "#/components/schemas/TxStatus"
                          TxType:
                            type: string
                            example: CCAUTHONLY
                          TxnCode:
                            type: string
                            example: "297620"
                      RespMsg:
                        type: string
                        example: Successfully Returned Receipt Detail for TxID 12
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentRecurring_FullDetail:
    post:
      summary: Retrieve full details of a recurring consent
      operationId: getRecurringConsentFullDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsentID:
                  type: integer
                  description: Consent ID for which to retrieve full details
                  example: 24
            example:
              ConsentID: 24
      responses:
        "200":
          description: Successfully returned full details
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentRecurring_FullDetailResult:
                    type: object
                    properties:
                      AccounttHolder:
                        $ref: "#/components/schemas/AccountHolder"
                      ConsentRecurring:
                        type: object
                        properties:
                          AcctHolderFirstName:
                            type: string
                            example: Sean
                          AcctHolderID:
                            type: integer
                            example: 1
                          AcctHolderLastName:
                            type: string
                            example: Wood
                          AcctNo:
                            type: string
                            example: "1111"
                          AuthTxID:
                            type: integer
                            example: 75
                          CreatedBy:
                            type: string
                            example: vidya_Venkatraman
                          CreatedOn:
                            $ref: "#/components/schemas/Date"
                          CustID:
                            type: integer
                            example: 72
                          CustRefID:
                            type: string
                            example: A123456
                          EndDate:
                            $ref: "#/components/schemas/Date"
                          ID:
                            type: integer
                            example: 24
                          IsEnabled:
                            type: boolean
                            example: true
                          MerchID:
                            type: integer
                            example: 1
                          ModifiedBy:
                            type: string
                            example: ":"
                          ModifiedOn:
                            $ref: "#/components/schemas/Date"
                          RAmtPaidSoFar:
                            type: number
                            format: float
                            example: -1
                            description: The $ amount paid so far on the recurring consent
                          RLastPaymentAmt:
                            type: number
                            format: float
                            example: 1000
                            description: The last payment $ amount on the recurring consent
                          RNumPayments:
                            type: integer
                            example: 10
                          RPGUID:
                            $ref: "#/components/schemas/RPGUID"
                          RPaymentAmt:
                            type: number
                            format: float
                            example: 1000
                          RPeriod:
                            type: string
                            example: BI_WEEKLY
                          RTotalAmt:
                            type: number
                            format: float
                            example: 10000
                          ServiceDescrip:
                            type: string
                            example: ""
                          StartDate:
                            $ref: "#/components/schemas/Date"
                      EndCustomer:
                        $ref: "#/components/schemas/Customer"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successfully Returned Full Detail For Consent ID : 24"
                        description: Response message detailing the result
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/ConsentRecurring:
    post:
      summary: Query recurring consents
      operationId: queryRecurringConsents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryConsent"
            example:
              Query: (E>='12/01/2023')&&(E<'12/31/2023')
      responses:
        "200":
          description: Successfully returned consent records
          content:
            application/json:
              schema:
                type: object
                properties:
                  ConsentRecurring_QueryResult:
                    type: object
                    properties:
                      Consents:
                        type: array
                        items:
                          type: object
                          properties:
                            AcctHolderFirstName:
                              type: string
                              example: VI
                            AcctHolderID:
                              type: integer
                              example: 1040
                            AcctHolderLastName:
                              type: string
                              example: VI
                            AcctNo:
                              type: string
                              example: "8888"
                            AuthTxID:
                              type: integer
                              example: 1835
                            CreatedBy:
                              type: string
                              example: Tester Savannah
                            CreatedOn:
                              $ref: "#/components/schemas/Date"
                            CustID:
                              type: integer
                              example: 1062
                            CustRefID:
                              type: string
                              example: ""
                            EndDate:
                              $ref: "#/components/schemas/Date"
                            ID:
                              type: integer
                              example: 522
                            IsEnabled:
                              type: boolean
                              example: true
                            MerchID:
                              type: integer
                              example: 1
                            ModifiedBy:
                              type: string
                              example: ":"
                            ModifiedOn:
                              $ref: "#/components/schemas/Date"
                            RAmtPaidSoFar:
                              type: number
                              format: float
                              example: 300
                              description: The $ amount paid so far on the recurring consent
                            RLastPaymentAmt:
                              type: number
                              format: float
                              example: 75
                              description: The last payment $ amount on the recurring consent
                            RNumPayments:
                              type: integer
                              example: 4
                            RPGUID:
                              $ref: "#/components/schemas/RPGUID"
                            RPaymentAmt:
                              type: number
                              format: float
                              example: 75
                            RPeriod:
                              type: string
                              example: WEEKLY
                            RTotalAmt:
                              type: number
                              format: float
                              example: 300
                            ServiceDescrip:
                              type: string
                              example: ""
                            StartDate:
                              $ref: "#/components/schemas/Date"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 4
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Consent Records : 4"
                        description: Response message detailing the number of records returned
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/RecurringSchedule:
    post:
      summary: Query recurring schedules
      operationId: queryRecurringSchedules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryRecurringSchedule"
            example:
              Query: (E=1)&&(H=4)
      responses:
        "200":
          description: Successfully returned schedule records
          content:
            application/json:
              schema:
                type: object
                properties:
                  RecurringSchedule_QueryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 3
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Transaction Records : 3"
                        description: Response message detailing the number of records returned
                      Schedule:
                        type: array
                        items:
                          $ref: "#/components/schemas/ScheduledPayment"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/Transaction_FullDetail:
    post:
      summary: Retrieve full details of a transaction
      operationId: getTransactionFullDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 12
            example:
              TxID: 12
      responses:
        "200":
          description: Successfully returned transaction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  Transaction_FullDetailResult:
                    type: object
                    properties:
                      AccountHolder:
                        $ref: "#/components/schemas/AccountHolder"
                      EndCustomer:
                        $ref: "#/components/schemas/Customer"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Successfully Returned Transaction Detail Record
                        description: Response message
                      Transaction:
                        type: object
                        properties:
                          ACCT_FIRST_NAME:
                            type: string
                            example: JOHN
                          ACCT_LAST_NAME:
                            type: string
                            example: DOE
                          ACCT_NO:
                            type: string
                            example: 4111XXXXXXXX1111
                          AMOUNT:
                            type: number
                            format: float
                            example: 0
                          AVSr:
                            $ref: "#/components/schemas/AVSr"
                          AcctHolderID:
                            type: integer
                            example: 1
                          BatchLogID:
                            type: integer
                            example: 0
                          BatchNO:
                            type: integer
                            example: -1
                          BatchStatus:
                            $ref: "#/components/schemas/BatchStatus"
                          CARD_TYPE:
                            type: string
                            example: VI
                          CASHBACK:
                            type: number
                            format: float
                            example: 0
                          CVVr:
                            $ref: "#/components/schemas/CVVr"
                          CardPresent:
                            type: boolean
                            example: false
                          ConsentID:
                            type: integer
                            example: 0
                          CreatedOn:
                            $ref: "#/components/schemas/Date"
                          Credits:
                            type: number
                            format: float
                            example: 0
                          EMVPresent:
                            type: boolean
                            example: false
                          EMVRecTags:
                            type: string
                            example: ""
                          EXP_DATE:
                            type: string
                            example: "1028"
                          EndCustID:
                            type: integer
                            example: 12
                          Flags:
                            $ref: "#/components/schemas/TransactionFlags"
                          HAuthorizedAmount:
                            type: number
                            format: float
                            example: -1
                          ID:
                            type: integer
                            example: 12
                          IsLocked:
                            type: boolean
                            example: false
                          IsPartialApproval:
                            type: boolean
                            example: false
                          LAST_CHANGED_BY:
                            type: string
                            example: vidya_Venkatraman
                          LastChangedOn:
                            $ref: "#/components/schemas/Date"
                          MerchID:
                            type: integer
                            example: 1
                          Origin:
                            type: string
                            example: WID
                          PAYMENT_TYPE:
                            type: string
                            example: C
                          PartialAuthApproved:
                            type: number
                            format: float
                            example: -1
                          PreAuthID:
                            type: integer
                            example: 0
                          PrepaidBalance:
                            type: number
                            format: float
                            example: -1
                          REF_ID:
                            $ref: "#/components/schemas/REF_ID"
                          RPGUID:
                            $ref: "#/components/schemas/RPGUID"
                          RefTxID:
                            $ref: "#/components/schemas/RefTxID"
                          SALE_TAX:
                            type: number
                            format: float
                            example: 0
                          SEQ_NO:
                            type: integer
                            example: 16
                          SERVER:
                            type: string
                            example: ""
                          SURCHARGE:
                            type: number
                            format: float
                            example: 0
                          TIP:
                            type: number
                            format: float
                            example: 0
                          TXN_CODE:
                            type: string
                            example: "297620"
                            description: Approval code returned by the processor.
                          TXN_DATE:
                            type: string
                            example: 21219
                          TXN_DATETIME:
                            $ref: "#/components/schemas/Date"
                          TXN_TIME:
                            type: string
                            example: "125122"
                          TxLOCK:
                            $ref: "#/components/schemas/TxLock"
                          TxSTATUS:
                            $ref: "#/components/schemas/TxStatus"
                          TxType:
                            type: string
                            example: CCAUTHONLY
                          UserID:
                            type: integer
                            example: 2546
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Use this call to return all the details for a single transaction.
        Details are separated into 3 distinct objects including:


        - AccountHolder (Card Holder)

        - EndCustomer (Optional user entity if not the actual cardholder such as a child or spouse receiving the services)

        - Transaction (All Transaction details)
  /APIcardProcREST/v1.0.0/Query/Transaction:
    post:
      summary: Search for transactions based on parameters
      operationId: queryTransactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Query:
                  $ref: "#/components/schemas/QueryTransaction"
            example:
              Query: (A=-1)&&(B=-1)&&(C>='4/13/2023')&&(C<'4/29/2023')
      responses:
        "200":
          description: Successfully returned transaction records
          content:
            application/json:
              schema:
                type: object
                properties:
                  Transaction_QueryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 5
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Transaction Records : 5"
                        description: Response message
                      Transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/Transaction"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Easy Pay provides a variety of ways to search for and query
        transactions. To view a complete list of options, view the
        https://easypaysoftware.com/en/Querying Query Guide.  


        Use this call to search for transactions based on one or more parameters. A collection of transaction objects is returned. Transactions can be searched using several different parameters including the following.  


        - ID ( TxID ) ( Unique Identifier for the transaction )  

        - TRANSACTION STATUS ( OPEN , VOID, SETTLED, FAILED )  

        - DATE CREATED 

        - CARDHOLDER LAST NAME / FIRST NAME  

        - BATCH NUMBER ( Settlement group )  

        - TRANSACTION TYPE ( CCSALE, CCCREDIT , CCAUTHONLY)  

        - APPROVAL CODE / DECLINE CODE  

        - AMOUNT  

        - Reference ID (User defined field which can be searchable)  

        - RPGUID (Another user defined field which can be searchable)  

        - Last 4 Digits of the Card 
  /APIcardProcREST/v1.0.0/Query/Reconcile:
    post:
      summary: Reconcile transactions
      operationId: reconcileTransactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartDate:
                  type: object
                  example: 2024-12-01T00:00:00.000Z
                  description: The start date
                EndDate:
                  type: object
                  example: 2025-01-01T00:00:00.000Z
                  description: The end date
                qType:
                  type: string
                  example: CARD
                  description: Type of transactions returned
      responses:
        "200":
          description: Successfully returned transaction records
          content:
            application/json:
              schema:
                type: object
                properties:
                  ReconcileResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumRecords:
                        type: integer
                        example: 1
                        description: Number of records returned
                      RespMsg:
                        type: string
                        example: "Successfully Returned Transaction Records : 1"
                        description: Response message
                      Transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/Reconcile"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        The reconcile Query is designed to be called at a specific periodic
        interval, perhaps once per day. We will return all the unique
        transaction IDs encountered during that interval. The query allows you
        to reconcile this list with data you have gathered during cardholder
        data interactions such as PayForm or Verifone Activity. If you find that
        a particular transaction is missing in your database you can call the
        TRANSACTION FULL DETAIL to consume any missing information.


        You may specify either Credit Card or ACH transactions to be returned in the Query ( see qType parameter ) use "CARD" or "ACH". When choosing dates you can consider the StartDate to be Included in your data request however the EndDate will not. You will receive all data which runs up to but not including the end date.  For example choosing the following dates will provide data for a single day on the calendar: "2024-12-01" "2024-12-02"    


        IMPORTANT: Do not call this method more than once a day. Excessive queries can cause your endpoint to be blocked. The max date range for this method is 31 days. The max records returned is 20,000. If you notice that the NumRecords returned equals 20000 then this means you have maxed out your query and you should use a smaller date range.  
  /APIcardProcREST/v1.0.0/Query/TransactionReceipt:
    post:
      summary: Retrieve a transaction receipt
      operationId: getTransactionReceipt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 2
                  description: The unique identifier for the transaction
                ReceiptType:
                  $ref: "#/components/schemas/ReceiptType"
            example:
              TxID: 2
              ReceiptType: 2
      responses:
        "200":
          description: Successfully returned transaction receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  TransactionReceiptQryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ReceiptHtml:
                        type: string
                        example: html
                        description: HTML content of the transaction receipt
                      RespMsg:
                        type: string
                        example: Successfully Returned Transaction Receipt Markup
                        description: Response message
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Query/VoiceSettings:
    post:
      summary: Retrieve voice settings
      operationId: getVoiceSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TxID:
                  type: integer
                  example: 2
                  description: The unique identifier for the transaction
            example:
              TxID: 2
      responses:
        "200":
          description: Successfully returned voice settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  VoiceSettingsQryResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Successfully Returned Voice Settings
                        description: Response message
                      VoiceSettings:
                        type: object
                        properties:
                          AccountHolder:
                            type: string
                            example: Sean Wood
                            description: Name of the account holder
                          BankNumber:
                            type: string
                            example: "067600"
                            description: Bank number
                          CardNumber:
                            type: string
                            example: wDgEk7v5w7c=is9fm7hewavmpQks4Y5qRMNDNKGGk7on
                            description: Encrypted card number
                          ChargeAmount:
                            type: number
                            format: float
                            example: 0
                            description: Charge amount
                          ExpDate:
                            type: string
                            example: "1028"
                            description: Expiration date of the card
                          MerchantID:
                            type: string
                            example: "27150000350101"
                            description: Merchant ID
                          PhoneNumber:
                            type: string
                            example: 1-800-944-1111
                            description: Contact phone number
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Receipt/ReceiptGenerate:
    post:
      summary: Generate a transaction receipt
      operationId: generateReceipt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                REFID:
                  type: integer
                  example: 158
                  description: The unique reference identifier for the transaction
                ReceiptType:
                  $ref: "#/components/schemas/ReceiptType"
                Recipient:
                  $ref: "#/components/schemas/Recipient"
            example:
              REFID: 158
              ReceiptType: 1
              Recipient: 1
      responses:
        "200":
          description: Successfully generated transaction receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  ReceiptGenerateResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      ReceiptHtml:
                        type: string
                        example: html
                        description: HTML content of the generated receipt
                      RespMsg:
                        type: string
                        example: Successfully Returned Transaction Receipt Markup
                        description: Response message
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        Use this call to request receipt details in HTML format for a
        particular TXID (Transaction ID). This method works for card on file
        documents as well as transaction receipts. You will need the TXID
        (Transaction ID) as well as a receipt type and a targeted recipient (
        Customer or Merchant ).


        The following will provide a customer receipt for TXID 123: { "REFID": 123, "ReceiptType": 1 (Sales Receipt) "Recipient": 1 (Customer Copy) }


        Recipient

        1 Merchant

        2 Customer

        3 Both


        Receipt Types

        1 Transaction

        2 Void

        3 Refund

        4 Annual Consent

        5 Recurring Consent

        6 Subscription

        7 ACH Transaction

        8 ACH Void

        9 ACH Refund


        Important you must replace all Unicode characters to consume clean HTML


        Example : CleanHtml = Regex.Replace(my, @"[^\u0000-\u007F]+", string.Empty);
  /APIcardProcREST/v1.0.0/RecurringSchedule/Cancel:
    post:
      summary: Cancel a recurring payment schedule
      operationId: cancelRecurringSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedID:
                  type: integer
                  example: 10
                  description: The unique identifier for the schedule to be canceled
            example:
              SchedID: 10
      responses:
        "200":
          description: Successfully canceled the recurring schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  RecurringSchedule_CancelResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Successful Cancel of SchedID 10 For $10.00 On 6/23/2019
                        description: Response message
                      ScheduledPayment:
                        $ref: "#/components/schemas/ScheduledPayment"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/RecurringSchedule/Modify:
    post:
      summary: Modify a recurring payment schedule
      operationId: modifyRecurringSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedID:
                  type: integer
                  example: 10
                  description: The unique identifier for the schedule to be modified
                PaymentAmount:
                  type: number
                  format: float
                  example: 10
                  description: The new $ payment amount for the schedule
                DueDate:
                  type: string
                  format: date
                  example: 2023-07-10T00:00:00.000Z
                  description: The new due date for the schedule
            example:
              SchedID: 10
              PaymentAmount: 10
              DueDate: 2023-07-10T00:00:00.000Z
      responses:
        "200":
          description: Successfully modified the recurring schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  RecurringSchedule_ModifyResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: Successful Reschedule of SchedID 10 For $10.00 On 7/10/2023
                        description: Response message
                      ScheduledPayment:
                        $ref: "#/components/schemas/ScheduledPayment"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/RecurringSchedule/ProcessScheduledPayments:
    post:
      summary: Process scheduled payments
      operationId: processScheduledPayments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MerchID:
                  type: integer
                  example: 1
                  description: The merchant identifier for processing payments
            example:
              MerchID: 1
      responses:
        "200":
          description: Successfully processed scheduled payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  ProcessScheduledPaymentsResult:
                    type: object
                    properties:
                      ApprovedPayments:
                        type: array
                        items:
                          $ref: "#/components/schemas/Payment"
                      DeclinedPayments:
                        type: array
                        items:
                          $ref: "#/components/schemas/Payment"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumApproved:
                        type: integer
                        example: 2
                      NumDeclined:
                        type: integer
                        example: 1
                      NumPartialAuths:
                        type: integer
                        example: 0
                      NumProcessed:
                        type: integer
                        example: 3
                      RespMsg:
                        type: string
                        example: "Total Processed: 3 Approved: 2 Declined: 1 Partial: 0"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/RecurringSchedule/ProcessScheduledPaymentsSelective:
    post:
      summary: Process selected scheduled payments
      operationId: processScheduledPaymentsSelective
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedIDs:
                  type: array
                  items:
                    type: integer
                  example:
                    - 172
                  description: The list of schedule IDs to process
            example:
              SchedIDs:
                - 172
      responses:
        "200":
          description: Successfully processed selected scheduled payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  ProcessScheduledPaymentsSelectiveResult:
                    type: object
                    properties:
                      ApprovedPayments:
                        type: array
                        items:
                          $ref: "#/components/schemas/Payment"
                      DeclinedPayments:
                        type: array
                        items:
                          $ref: "#/components/schemas/Payment"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      NumApproved:
                        type: integer
                        example: 1
                      NumDeclined:
                        type: integer
                        example: 0
                      NumPartialAuths:
                        type: integer
                        example: 0
                      NumProcessed:
                        type: integer
                        example: 1
                      RespMsg:
                        type: string
                        example: "Total Processed: 1 Approved: 1 Declined: 0 Partial: 0"
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Settlement/ExecuteBatch_Selective:
    post:
      summary: Execute selective batch settlement
      operationId: executeBatchSelective
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TransactionIDs:
                  type: array
                  items:
                    type: integer
                  example:
                    - 52
                  description: List of transaction IDs to be settled
                MerchID:
                  type: integer
                  example: 1
                  description: The merchant identifier
            example:
              TransactionIDs:
                - 52
              MerchID: 1
      responses:
        "200":
          description: Successfully executed batch settlement
          content:
            application/json:
              schema:
                type: object
                properties:
                  Settlement_ExecuteBatch_SelectiveResult:
                    type: object
                    properties:
                      BatchResult:
                        $ref: "#/components/schemas/BatchResult"
                      ErrCode:
                        type: integer
                        example: 0
                        description: Error code, 0 indicates success
                      ErrMsg:
                        type: string
                        example: ""
                        description: Error message, empty if no error
                      FunctionOk:
                        type: boolean
                        example: true
                        description: Indicates if the function executed correctly
                      RespMsg:
                        type: string
                        example: "Successful Settlement : OK 003 0720 0000                "
                      SettlementApproved:
                        type: boolean
                        example: true
                        description: Indicates if the settlement was approved
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Settlement/ExecuteBatch_All:
    post:
      summary: Execute batch settlement for all transactions
      operationId: executeBatchAll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MerchID:
                  type: integer
                  example: 1
                  description: The merchant identifier
            example:
              MerchID: 1
      responses:
        "200":
          description: Successfully executed batch settlement for all transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  Settlement_ExecuteBatch_AllResult:
                    type: object
                    properties:
                      BatchResult:
                        $ref: "#/components/schemas/BatchResult"
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      RespMsg:
                        type: string
                        example: "Successful Settlement : OK 006 0808 0000                "
                      SettlementApproved:
                        type: boolean
                        example: true
                        description: Indicates if the settlement was approved
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
  /APIcardProcREST/v1.0.0/Other/SMSPay:
    post:
      summary: Create a payment link via SMS or email
      operationId: createSMSPaymentLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Msg:
                  type: object
                  properties:
                    Person:
                      $ref: "#/components/schemas/Person"
                    MessageType:
                      type: string
                      enum:
                        - EMAIL
                        - URLONLY
                        - TEXT
                      example: TEXT
                      description: >
                        The type of message to send.
                          - EMAIL: Send an email with a link to the payment form
                          - URLONLY: Only return a URL to the payment form in the response
                          - TEXT: Send a text message with a link to the payment form
                    RefID:
                      type: string
                      example: 52520ABC
                      description: A custom user-defined field to save with the record.
                    RPGUID:
                      $ref: "#/components/schemas/RPGUID"
                    MessageBody:
                      type: string
                      example: ""
                      description: >
                        The message to send. Use **Merch1** to insert the merchant's name
                        into your message template. The payment URL will be
                        added at the end automatically. 

                        If the body is left empty, a default generic message will be used:
                          "You have a Payment Due to [Merchant Name] of [Amount] due on [DueOn]. Please follow the link below to make the Payment. [Link Here]"
                    AcctHolderID:
                      type: integer
                      example: 0
                      description: Not used, please fill with 0.
                    Amount:
                      type: number
                      format: float
                      example: 50
                      description: he $ amount to collect.
                    ConsentID:
                      type: integer
                      example: 0
                      description: Not used, please fill with 0.
                    DueOn:
                      type: string
                      example: 1/12/2025
                      description: The payment due date in mm/dd/yyyy or yyyy/mm/dd format to display
                        to the customer.
                    EINDEX:
                      $ref: "#/components/schemas/EINDEX"
                    MerchID:
                      type: integer
                      example: 1
                      description: unique identifier for the Merchant record.
                    TXID:
                      type: integer
                      example: 0
                      description: Not used, please fill with 0.
                    WType:
                      type: string
                      example: SW
                      description: This specifies which payment widget to display, including custom
                        widgets built for your company. Contact Number for more
                        information.
                    RedirectURL:
                      type: string
                      example: https://easypay7.com/PostingApp
                      description: The URL to redirect to after processing the payment. The payment
                        data will be appended to the URL to be consumed by the
                        merchant.
                    WidgetURL:
                      type: string
                      example: https://easypay5.com/stdwidget
                      description: Endpoint for the widget payment form, including custom forms.
                        Contact Number and we will provide you with a value.
                    ExpiresOn:
                      type: string
                      example: 2025-10-05T00:00:00.000Z
                      description: A date in yyyy-mm-dd format for when the payment link should no
                        longer be available.
                    SingleUse:
                      type: integer
                      example: 0
                      description: Provide a true or false indicating whether the payment link should
                        only accept a single payment.
                    OptParam:
                      type: string
                      example: VISIBLE|1EE7|READONLY|0000|STYLES|0000|OPTIONS|0601|COLORS|#ffffff,#428bca,#007bff,#212121,#ffffff,#212121,#ffffff
                      description: Parameters which control the design and behavior of the payment
                        form including the visible fields, read-only fields,
                        color and styling, and submission options.
                    Questions:
                      type: array
                      items:
                        type: object
                      description: Not used.
            example:
              Msg:
                Person:
                  Firstname: EasyPay
                  Lastname: Tester
                  Company: ""
                  Title: ""
                  Url: ""
                  BillIngAdress:
                    Address1: 123 Fake St.
                    Address2: ""
                    City: Portland
                    State: ME
                    ZIP: "04106"
                    Country: USA
                  Email: testing@here.com
                  Phone: "2076885025"
                MessageType: TEXT
                RefID: 52520ABC
                RPGUID: 4c269391-a698-4e10-a1a8-0353ee80d1a6
                MessageBody: ""
                AcctHolderID: 0
                Amount: 50
                ConsentID: 0
                DueOn: 1/12/2025
                EINDEX: "100"
                MerchID: 1
                TXID: 0
                WType: SW
                RedirectURL: https://easypay7.com/PostingApp
                WidgetURL: https://easypay5.com/stdwidget
                ExpiresOn: 2025-10-05T00:00:00.000Z
                SingleUse: 0
                OptParam: VISIBLE|1EE7|READONLY|0000|STYLES|0000|OPTIONS|0601|COLORS|#ffffff,#428bca,#007bff,#212121,#ffffff,#212121,#ffffff
                Questions: []
      responses:
        "200":
          description: Successfully created payment link
          content:
            application/json:
              schema:
                type: object
                properties:
                  SMSPaymentResult:
                    type: object
                    properties:
                      ErrCode:
                        $ref: "#/components/schemas/ErrCode"
                      ErrMsg:
                        $ref: "#/components/schemas/ErrMsg"
                      FunctionOk:
                        $ref: "#/components/schemas/FunctionOk"
                      PaymentUrl:
                        type: string
                        nullable: true
                        example: null
                        description: The URL for the payment link, null if not applicable
                      RespMsg:
                        type: string
                        example: Text Sent Successfully to 2078995025
      parameters:
        - $ref: "#/components/parameters/SessKey"
        - $ref: "#/components/parameters/ContentType"
        - $ref: "#/components/parameters/Accept"
      description: >
        This call allows you to create a tinyURL of the widget payment link
        that will display a message and payment form to the customer. The
        message and form that is displayed to the customer is easily configured
        by using the API call options.


        This API method allows users to accomplish three typical tasks:


        1 Send a SMS text with a message and Payment Link

        2 Send an email with message and Payment Link

        3 Acquire the Payment Link and use it internally or externally


        For more details on the use of Text to Pay as well as some sample code is available on our documentation site located at https://easypaysoftware.com/en/text-to-pay.

















